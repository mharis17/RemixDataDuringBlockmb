{
	"id": "54ffeb0718a911f868be4aec61b85838",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/deployedOmar/omerFinalToken.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   \r\n   */\r\n \r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor ()  { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return payable (msg.sender);\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor ()  {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash =\r\n            0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            codehash := extcodehash(account)\r\n        }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Address: insufficient balance\"\r\n        );\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(\r\n            success,\r\n            \"Address: unable to send value, recipient may have reverted\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data)\r\n        internal\r\n        returns (bytes memory)\r\n    {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return\r\n            functionCallWithValue(\r\n                target,\r\n                data,\r\n                value,\r\n                \"Address: low-level call with value failed\"\r\n            );\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(\r\n            address(this).balance >= value,\r\n            \"Address: insufficient balance for call\"\r\n        );\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 weiValue,\r\n        string memory errorMessage\r\n    ) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) =\r\n            target.call{value: weiValue}(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\ncontract Q8ERC20Token is Context, IERC20 {\r\n  using Address for address;\r\n  using SafeMath for uint256;\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string private  _symbol;\r\n  string private _name;\r\n  address public Contractowner;\r\n  uint256  public DoplymentFee;\r\n  address public  feeCollector;\r\n\r\nstring public mintContract=\"mint\";\r\nstring public burnContract=\"burn\";\r\nstring public doubleContract=\"double\";\r\nstring public contractType;\r\n  \r\n\r\n  constructor(string memory Name,string memory Symbol ,uint256 _initialSupply,uint8 decimal ,uint256 _DoplymentFee,address  payable _feeCollector,string memory _contractType  ) payable  {\r\n    require (msg.value >= _DoplymentFee,\"not enough fee\");\r\n    _name = Name;\r\n    _symbol = Symbol ;\r\n    _decimals = decimal;\r\n    Contractowner=msg.sender;\r\n    _totalSupply = _initialSupply *10**_decimals;//in hexadecimal\r\n    DoplymentFee=_DoplymentFee;\r\n    feeCollector=_feeCollector;\r\n    contractType=_contractType;\r\n    _balances[msg.sender] = _totalSupply;\r\n   _feeCollector.transfer(msg.value);\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n\r\n  }\r\n\r\n\r\n\r\n  function _mintSupply(address account, uint256 amount) public {\r\n    require(keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"can not call mint\");\r\n    require(account != address(0), \" mint to the zero address\");\r\n    require(msg.sender==Contractowner,\"you are not the owner\");\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n\r\n  //burn\r\n function _burn(address account, uint256 amount) public {\r\n    require(keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"you didn't choose burn\");\r\n    require(account != address(0), \"burn from the zero address\");\r\n    _balances[account] = _balances[account].sub(amount, \": burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \": burn amount exceeds allowance\"));\r\n  }\r\n  \r\n\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n\r\n  function name() external override view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n \r\n  function totalSupply() public override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n\r\n  function balanceOf(address account) public override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\"));\r\n    _transfer(sender, recipient, amount);\r\n    \r\n    return true;\r\n  }\r\n\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \" transfer from the zero address\");\r\n    require(recipient != address(0), \" transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \" transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n\r\n\r\n\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \": approve fromm the zero address\");\r\n    require(spender != address(0), \": approvee to the zero address\");\r\n    // require(balanceOf(owner)>0,\"error\");   \r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n   function transferOwnership(address _newOwner) public \r\n   {\r\n    require(msg.sender==Contractowner,\"you are not the owner\");\r\n        Contractowner=_newOwner;\r\n   }\r\n   function renounceOwnership() public  {\r\n    require(msg.sender==Contractowner,\"you are not the owner\");\r\n    Contractowner = address(0);\r\n  }\r\n  \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/deployedOmar/omerFinalToken.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/deployedOmar/omerFinalToken.sol\":7159:12163  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7159:12163  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a3ffccfa5fec0bb549257df0dc1bef74686697347f1f6ef55103f412286e62e464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3ffccfa5fec0bb549257df0dc1bef74686697347f1f6ef55103f412286e62e464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SELFDESTRUCT 0xCC STATICCALL 0x5F 0xEC SIGNEXTEND 0xB5 0x49 0x25 PUSH30 0xF0DC1BEF74686697347F1F6EF55103F412286E62E464736F6C6343000807 STOP CALLER ",
							"sourceMap": "7159:5004:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7159:5004:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3ffccfa5fec0bb549257df0dc1bef74686697347f1f6ef55103f412286e62e464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SELFDESTRUCT 0xCC STATICCALL 0x5F 0xEC SIGNEXTEND 0xB5 0x49 0x25 PUSH30 0xF0DC1BEF74686697347F1F6EF55103F412286E62E464736F6C6343000807 STOP CALLER ",
							"sourceMap": "7159:5004:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7159,
									"end": 12163,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3ffccfa5fec0bb549257df0dc1bef74686697347f1f6ef55103f412286e62e464736f6c63430008070033",
									".code": [
										{
											"begin": 7159,
											"end": 12163,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 12163,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/deployedOmar/omerFinalToken.sol\":2936:3461  contract Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":3110:3129  constructor ()  { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":2936:3461  contract Context {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":2936:3461  contract Context {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf31a7bce5e6df400718b23396e7a3ca59ab827afa97a02e7908cacf21de56c664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bf31a7bce5e6df400718b23396e7a3ca59ab827afa97a02e7908cacf21de56c664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF BALANCE 0xA7 0xBC 0xE5 0xE6 0xDF BLOCKHASH SMOD XOR 0xB2 CALLER SWAP7 0xE7 LOG3 0xCA MSIZE 0xAB DUP3 PUSH27 0xFA97A02E7908CACF21DE56C664736F6C6343000807003300000000 ",
							"sourceMap": "2936:525:0:-:0;;;3110:19;;;;;;;;;;2936:525;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bf31a7bce5e6df400718b23396e7a3ca59ab827afa97a02e7908cacf21de56c664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF BALANCE 0xA7 0xBC 0xE5 0xE6 0xDF BLOCKHASH SMOD XOR 0xB2 CALLER SWAP7 0xE7 LOG3 0xCA MSIZE 0xAB DUP3 PUSH27 0xFA97A02E7908CACF21DE56C664736F6C6343000807003300000000 ",
							"sourceMap": "2936:525:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3110,
									"end": 3129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2936,
									"end": 3461,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf31a7bce5e6df400718b23396e7a3ca59ab827afa97a02e7908cacf21de56c664736f6c63430008070033",
									".code": [
										{
											"begin": 2936,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2936,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 3461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3461,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/deployedOmar/omerFinalToken.sol\":5402:7157  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5647:5788  constructor ()  {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5670:5687  address msgSender */\n  0x00\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5709:5727  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n  caller\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5709:5727  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5739:5782  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5739:5782  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5670:5687  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5739:5782  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5663:5788  {\r... */\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":5402:7157  contract Ownable is Context {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5402:7157  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6463:6593  function renounceOwnership() public onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5861:5934  function owner() public view returns (address) {\r... */\n    tag_4:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5899:5906  address */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5922:5928  _owner */\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5861:5934  function owner() public view returns (address) {\r... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5922:5928  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":451:502   */\n      dup3\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5861:5934  function owner() public view returns (address) {\r... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":5861:5934  function owner() public view returns (address) {\r... */\n      add\n      swap1\n      return\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6738:6841  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6463:6593  function renounceOwnership() public onlyOwner {\r... */\n    tag_7:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6055:6061  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6055:6077  _owner == _msgSender() */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1122:1124   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1104:1125   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1134:1164   */\n      mstore\n        /* \"#utility.yul\":1200:1234   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1180:1198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1173:1235   */\n      mstore\n        /* \"#utility.yul\":1252:1270   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6558:6559  0 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6542:6548  _owner */\n      dup1\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6521:6561  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6542:6548  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6521:6561  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6558:6559  0 */\n      dup4\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6521:6561  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6585:6586  0 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6568:6587  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6463:6593  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6738:6841  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_15:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6055:6061  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6055:6077  _owner == _msgSender() */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1122:1124   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1104:1125   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1134:1164   */\n      mstore\n        /* \"#utility.yul\":1200:1234   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1180:1198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1173:1235   */\n      mstore\n        /* \"#utility.yul\":1252:1270   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":920:1276   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6047:6114  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6807:6835  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6826:6834  newOwner */\n      dup2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6807:6825  _transferOwnership */\n      tag_30\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6807:6835  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6738:6841  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6939:7154  function _transferOwnership(address newOwner) internal {\r... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7009:7031  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7001:7074  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7001:7074  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x26\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":844:862   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":837:873   */\n      mstore\n        /* \"#utility.yul\":890:909   */\n      0x84\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7001:7074  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":513:915   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7001:7074  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_33:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7107:7113  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7086:7124  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7107:7113  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7086:7124  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7131:7137  _owner */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":7131:7148  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":6939:7154  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_38:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_39:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ecce17fa6be1463bc585fa840e46bd2c1bd767a677514aa2de786f11261bb17064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_110": {
									"entryPoint": null,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220ecce17fa6be1463bc585fa840e46bd2c1bd767a677514aa2de786f11261bb17064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xCE OR STATICCALL PUSH12 0xE1463BC585FA840E46BD2C1B 0xD7 PUSH8 0xA677514AA2DE786F GT 0x26 SHL 0xB1 PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "5402:1755:0:-:0;;;5647:141;;;;;;;;;-1:-1:-1;5670:17:0;5709:18;;-1:-1:-1;;;;;;5709:18:0;3220:10;5709:18;;;;;5739:43;;3220:10;;;;5739:43;;5670:17;;5739:43;5663:125;5402:1755;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_110": {
									"entryPoint": null,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_423": {
									"entryPoint": 401,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_384": {
									"entryPoint": 130,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_397": {
									"entryPoint": 299,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1278:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "859:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "864:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "882:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "882:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1094:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1111:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1104:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1134:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1195:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1200:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1173:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1173:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1244:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1244:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1071:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1085:4:1",
														"type": ""
													}
												],
												"src": "920:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220ecce17fa6be1463bc585fa840e46bd2c1bd767a677514aa2de786f11261bb17064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xCE OR STATICCALL PUSH12 0xE1463BC585FA840E46BD2C1B 0xD7 PUSH8 0xA677514AA2DE786F GT 0x26 SHL 0xB1 PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "5402:1755:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6463:130;;;:::i;:::-;;5861:73;5899:7;5922:6;5861:73;;;-1:-1:-1;;;;;5922:6:0;;;451:51:1;;5861:73:0;;;;;439:2:1;5861:73:0;;;6738:103;;;;;;:::i;:::-;;:::i;6463:130::-;6055:6;;-1:-1:-1;;;;;6055:6:0;3220:10;6055:22;6047:67;;;;-1:-1:-1;;;6047:67:0;;1122:2:1;6047:67:0;;;1104:21:1;;;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1252:18;;6047:67:0;;;;;;;;;6558:1:::1;6542:6:::0;;6521:40:::1;::::0;-1:-1:-1;;;;;6542:6:0;;::::1;::::0;6521:40:::1;::::0;6558:1;;6521:40:::1;6585:1;6568:19:::0;;-1:-1:-1;;;;;;6568:19:0::1;::::0;;6463:130::o;6738:103::-;6055:6;;-1:-1:-1;;;;;6055:6:0;3220:10;6055:22;6047:67;;;;-1:-1:-1;;;6047:67:0;;1122:2:1;6047:67:0;;;1104:21:1;;;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1252:18;;6047:67:0;920:356:1;6047:67:0;6807:28:::1;6826:8;6807:18;:28::i;:::-;6738:103:::0;:::o;6939:215::-;-1:-1:-1;;;;;7009:22:0;;7001:73;;;;-1:-1:-1;;;7001:73:0;;715:2:1;7001:73:0;;;697:21:1;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:1;;;837:36;890:19;;7001:73:0;513:402:1;7001:73:0;7107:6;;;7086:38;;-1:-1:-1;;;;;7086:38:0;;;;7107:6;;;7086:38;;;7131:6;:17;;-1:-1:-1;;;;;;7131:17:0;-1:-1:-1;;;;;7131:17:0;;;;;;;;;;6939:215::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139000",
								"executionCost": "25956",
								"totalCost": "164956"
							},
							"external": {
								"owner()": "2292",
								"renounceOwnership()": "30143",
								"transferOwnership(address)": "30416"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5647,
									"end": 5788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5670,
									"end": 5687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3230,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5709,
									"end": 5727,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5739,
									"end": 5782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5739,
									"end": 5782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5739,
									"end": 5782,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5739,
									"end": 5782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5670,
									"end": 5687,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5670,
									"end": 5687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5739,
									"end": 5782,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5663,
									"end": 5788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5402,
									"end": 7157,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecce17fa6be1463bc585fa840e46bd2c1bd767a677514aa2de786f11261bb17064736f6c63430008070033",
									".code": [
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 7157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6558,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6558,
											"end": 6559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6558,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6585,
											"end": 6586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1276,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6047,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6826,
											"end": 6834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6807,
											"end": 6835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6807,
											"end": 6835,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6807,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6939,
											"end": 7154,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6939,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 844,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 837,
											"end": 873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 890,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7001,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6939,
											"end": 7154,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 312,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Q8ERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "Name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "Symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimal",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_DoplymentFee",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_feeCollector",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_contractType",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Contractowner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DoplymentFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_mintSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnContract",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractType",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "doubleContract",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintContract",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/deployedOmar/omerFinalToken.sol\":12617:12650  string public mintContract=\"mint\" */\n  0xc0\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12169:17663  contract Q8ERC20Token is Context, IERC20 {\r... */\n  0x40\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12617:12650  string public mintContract=\"mint\" */\n  mstore\n  0x04\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12169:17663  contract Q8ERC20Token is Context, IERC20 {\r... */\n  0x80\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12617:12650  string public mintContract=\"mint\" */\n  dup2\n  swap1\n  mstore\n  shl(0xe2, 0x1b5a5b9d)\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x09\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12653:12686  string public burnContract=\"burn\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe1, 0x313ab937)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_3\n  swap2\n  0x0a\n  swap2\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12689:12726  string public doubleContract=\"double\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  shl(0xd0, 0x646f75626c65)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_4\n  swap2\n  0x0b\n  swap2\n  tag_2\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12766:13424  constructor(string memory Name,string memory Symbol ,uint256 _initialSupply,uint8 decimal ,uint256 _DoplymentFee,address  payable _feeCollector,string memory _contractType  ) payable  {\r... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_5\n  swap2\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12979:12992  _DoplymentFee */\n  dup3\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12966:12975  msg.value */\n  callvalue\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12966:12992  msg.value >= _DoplymentFee */\n  lt\n  iszero\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12957:13010  require (msg.value >= _DoplymentFee,\"not enough fee\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2444:2446   */\n  0x20\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12957:13010  require (msg.value >= _DoplymentFee,\"not enough fee\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2426:2447   */\n  mstore\n    /* \"#utility.yul\":2483:2485   */\n  0x0e\n    /* \"#utility.yul\":2463:2481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2456:2486   */\n  mstore\n  shl(0x90, 0x6e6f7420656e6f75676820666565)\n    /* \"#utility.yul\":2502:2520   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2495:2539   */\n  mstore\n    /* \"#utility.yul\":2556:2574   */\n  0x64\n  add\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12957:13010  require (msg.value >= _DoplymentFee,\"not enough fee\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13017:13029  _name = Name */\n  dup7\n  mload\n  tag_14\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13017:13022  _name */\n  0x05\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13017:13029  _name = Name */\n  0x20\n  dup11\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13036:13052  _symbol = Symbol */\n  dup6\n  mload\n  tag_15\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13036:13043  _symbol */\n  0x04\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13036:13052  _symbol = Symbol */\n  0x20\n  dup10\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13060:13069  _decimals */\n  0x03\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13060:13079  _decimals = decimal */\n  dup1\n  sload\n  0xff\n  dup7\n  and\n  not(0xff)\n  swap1\n  swap2\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13086:13099  Contractowner */\n  0x06\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13086:13110  Contractowner=msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13100:13110  msg.sender */\n  caller\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13086:13110  Contractowner=msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13148:13161  10**_decimals */\n  tag_16\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13148:13150  10 */\n  0x0a\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13148:13161  10**_decimals */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13132:13161  _initialSupply *10**_decimals */\n  tag_18\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13132:13146  _initialSupply */\n  dup7\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13132:13161  _initialSupply *10**_decimals */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13117:13129  _totalSupply */\n  0x02\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13117:13161  _totalSupply = _initialSupply *10**_decimals */\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13184:13196  DoplymentFee */\n  0x07\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13184:13210  DoplymentFee=_DoplymentFee */\n  dup4\n  swap1\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13217:13229  feeCollector */\n  0x08\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13217:13243  feeCollector=_feeCollector */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13250:13276  contractType=_contractType */\n  dup1\n  mload\n  tag_20\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13250:13262  contractType */\n  0x0c\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13250:13276  contractType=_contractType */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13307:13319  _totalSupply */\n  sload(0x02)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13293:13303  msg.sender */\n  caller\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13283:13292  _balances */\n  0x00\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13283:13304  _balances[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13283:13319  _balances[msg.sender] = _totalSupply */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13358  _feeCollector.transfer(msg.value) */\n  swap1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13347  _feeCollector.transfer */\n  dup5\n  and\n  swap2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13348:13357  msg.value */\n  callvalue\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13358  _feeCollector.transfer(msg.value) */\n  dup1\n  iszero\n  0x08fc\n  mul\n  swap3\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13348:13357  msg.value */\n  swap1\n  swap2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13358  _feeCollector.transfer(msg.value) */\n  dup2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13283:13292  _balances */\n  dup2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13358  _feeCollector.transfer(msg.value) */\n  dup2\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13348:13357  msg.value */\n  dup6\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13347  _feeCollector.transfer */\n  dup9\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13325:13358  _feeCollector.transfer(msg.value) */\n  dup9\n  call\n  swap4\n  pop\n  pop\n  pop\n  pop\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13403:13415  _totalSupply */\n  sload(0x02)\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13370:13416  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n    /* \"#utility.yul\":2731:2756   */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13391:13401  msg.sender */\n  caller\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13387:13388  0 */\n  0x00\n  swap1\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13370:13416  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":2719:2721   */\n  0x20\n    /* \"#utility.yul\":2704:2722   */\n  add\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":13370:13416  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12766:13424  constructor(string memory Name,string memory Symbol ,uint256 _initialSupply,uint8 decimal ,uint256 _DoplymentFee,address  payable _feeCollector,string memory _contractType  ) payable  {\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12169:17663  contract Q8ERC20Token is Context, IERC20 {\r... */\n  jump(tag_37)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_29\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_32)\ntag_29:\n  dup3\n  0x1f\n  lt\n  tag_30\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_32)\ntag_30:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_32\n  jumpi\n  swap2\n  dup3\n  add\ntag_31:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_32\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_31)\ntag_32:\n  pop\n  tag_33\n  swap3\n  swap2\n  pop\n  tag_34\n  jump\t// in\ntag_33:\n  pop\n  swap1\n  jump\t// out\ntag_34:\ntag_35:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_33\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_35)\n    /* \"#utility.yul\":14:199   */\ntag_38:\n    /* \"#utility.yul\":101:114   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":143:174   */\n  dup2\n  and\n    /* \"#utility.yul\":133:175   */\n  dup2\n  eq\n    /* \"#utility.yul\":123:193   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":189:190   */\n  0x00\n    /* \"#utility.yul\":186:187   */\n  dup1\n    /* \"#utility.yul\":179:191   */\n  revert\n    /* \"#utility.yul\":123:193   */\ntag_40:\n    /* \"#utility.yul\":14:199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":204:1089   */\ntag_41:\n    /* \"#utility.yul\":258:263   */\n  0x00\n    /* \"#utility.yul\":311:314   */\n  dup3\n    /* \"#utility.yul\":304:308   */\n  0x1f\n    /* \"#utility.yul\":296:302   */\n  dup4\n    /* \"#utility.yul\":292:309   */\n  add\n    /* \"#utility.yul\":288:315   */\n  slt\n    /* \"#utility.yul\":278:333   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":329:330   */\n  0x00\n    /* \"#utility.yul\":326:327   */\n  dup1\n    /* \"#utility.yul\":319:331   */\n  revert\n    /* \"#utility.yul\":278:333   */\ntag_43:\n    /* \"#utility.yul\":352:365   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":414:424   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":411:447   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":427:445   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":502:504   */\n  0x40\n    /* \"#utility.yul\":496:505   */\n  mload\n    /* \"#utility.yul\":470:472   */\n  0x1f\n    /* \"#utility.yul\":556:569   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":552:574   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":576:578   */\n  0x3f\n    /* \"#utility.yul\":548:579   */\n  add\n    /* \"#utility.yul\":544:584   */\n  and\n    /* \"#utility.yul\":532:585   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":600:618   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":620:642   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":597:643   */\n  or\n    /* \"#utility.yul\":594:666   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":646:664   */\n  tag_48\n  tag_46\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":686:696   */\n  dup2\n    /* \"#utility.yul\":682:684   */\n  0x40\n    /* \"#utility.yul\":675:697   */\n  mstore\n    /* \"#utility.yul\":721:723   */\n  dup4\n    /* \"#utility.yul\":713:719   */\n  dup2\n    /* \"#utility.yul\":706:724   */\n  mstore\n    /* \"#utility.yul\":743:747   */\n  0x20\n    /* \"#utility.yul\":733:747   */\n  swap3\n  pop\n    /* \"#utility.yul\":788:791   */\n  dup7\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":778:780   */\n  dup6\n    /* \"#utility.yul\":770:776   */\n  dup9\n    /* \"#utility.yul\":766:781   */\n  add\n    /* \"#utility.yul\":762:786   */\n  add\n    /* \"#utility.yul\":759:792   */\n  gt\n    /* \"#utility.yul\":756:809   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":805:806   */\n  0x00\n    /* \"#utility.yul\":802:803   */\n  dup1\n    /* \"#utility.yul\":795:807   */\n  revert\n    /* \"#utility.yul\":756:809   */\ntag_49:\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":818:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":837:970   */\ntag_50:\n    /* \"#utility.yul\":851:853   */\n  dup4\n    /* \"#utility.yul\":848:849   */\n  dup3\n    /* \"#utility.yul\":845:854   */\n  lt\n    /* \"#utility.yul\":837:970   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":939:953   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":935:958   */\n  dup4\n  add\n    /* \"#utility.yul\":929:959   */\n  mload\n    /* \"#utility.yul\":908:922   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":904:927   */\n  dup5\n  add\n    /* \"#utility.yul\":897:960   */\n  mstore\n    /* \"#utility.yul\":862:872   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":837:970   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":988:990   */\n  dup4\n    /* \"#utility.yul\":985:986   */\n  dup3\n    /* \"#utility.yul\":982:991   */\n  gt\n    /* \"#utility.yul\":979:1059   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1047:1048   */\n  0x00\n    /* \"#utility.yul\":1042:1044   */\n  dup4\n    /* \"#utility.yul\":1037:1039   */\n  dup6\n    /* \"#utility.yul\":1029:1035   */\n  dup4\n    /* \"#utility.yul\":1025:1040   */\n  add\n    /* \"#utility.yul\":1021:1045   */\n  add\n    /* \"#utility.yul\":1014:1049   */\n  mstore\n    /* \"#utility.yul\":979:1059   */\ntag_53:\n    /* \"#utility.yul\":1077:1083   */\n  swap7\n    /* \"#utility.yul\":204:1089   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1094:2237   */\ntag_6:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1262:1268   */\n  dup1\n    /* \"#utility.yul\":1270:1276   */\n  0x00\n    /* \"#utility.yul\":1278:1284   */\n  dup1\n    /* \"#utility.yul\":1286:1292   */\n  0x00\n    /* \"#utility.yul\":1294:1300   */\n  dup1\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1355:1358   */\n  0xe0\n    /* \"#utility.yul\":1343:1352   */\n  dup9\n    /* \"#utility.yul\":1334:1341   */\n  dup11\n    /* \"#utility.yul\":1330:1353   */\n  sub\n    /* \"#utility.yul\":1326:1359   */\n  slt\n    /* \"#utility.yul\":1323:1376   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1323:1376   */\ntag_55:\n    /* \"#utility.yul\":1399:1415   */\n  dup8\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1464:1478   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1461:1495   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1491:1492   */\n  0x00\n    /* \"#utility.yul\":1488:1489   */\n  dup1\n    /* \"#utility.yul\":1481:1493   */\n  revert\n    /* \"#utility.yul\":1461:1495   */\ntag_56:\n    /* \"#utility.yul\":1514:1575   */\n  tag_57\n    /* \"#utility.yul\":1567:1574   */\n  dup12\n    /* \"#utility.yul\":1558:1564   */\n  dup4\n    /* \"#utility.yul\":1547:1556   */\n  dup13\n    /* \"#utility.yul\":1543:1565   */\n  add\n    /* \"#utility.yul\":1514:1575   */\n  tag_41\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1504:1575   */\n  swap9\n  pop\n    /* \"#utility.yul\":1621:1623   */\n  0x20\n    /* \"#utility.yul\":1610:1619   */\n  dup11\n    /* \"#utility.yul\":1606:1624   */\n  add\n    /* \"#utility.yul\":1600:1625   */\n  mload\n    /* \"#utility.yul\":1584:1625   */\n  swap2\n  pop\n    /* \"#utility.yul\":1650:1652   */\n  dup1\n    /* \"#utility.yul\":1640:1648   */\n  dup3\n    /* \"#utility.yul\":1637:1653   */\n  gt\n    /* \"#utility.yul\":1634:1670   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1666:1667   */\n  0x00\n    /* \"#utility.yul\":1663:1664   */\n  dup1\n    /* \"#utility.yul\":1656:1668   */\n  revert\n    /* \"#utility.yul\":1634:1670   */\ntag_58:\n    /* \"#utility.yul\":1689:1752   */\n  tag_59\n    /* \"#utility.yul\":1744:1751   */\n  dup12\n    /* \"#utility.yul\":1733:1741   */\n  dup4\n    /* \"#utility.yul\":1722:1731   */\n  dup13\n    /* \"#utility.yul\":1718:1742   */\n  add\n    /* \"#utility.yul\":1689:1752   */\n  tag_41\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1679:1752   */\n  swap8\n  pop\n    /* \"#utility.yul\":1792:1794   */\n  0x40\n    /* \"#utility.yul\":1781:1790   */\n  dup11\n    /* \"#utility.yul\":1777:1795   */\n  add\n    /* \"#utility.yul\":1771:1796   */\n  mload\n    /* \"#utility.yul\":1761:1796   */\n  swap7\n  pop\n    /* \"#utility.yul\":1839:1841   */\n  0x60\n    /* \"#utility.yul\":1828:1837   */\n  dup11\n    /* \"#utility.yul\":1824:1842   */\n  add\n    /* \"#utility.yul\":1818:1843   */\n  mload\n    /* \"#utility.yul\":1805:1843   */\n  swap2\n  pop\n    /* \"#utility.yul\":1883:1887   */\n  0xff\n    /* \"#utility.yul\":1876:1881   */\n  dup3\n    /* \"#utility.yul\":1872:1888   */\n  and\n    /* \"#utility.yul\":1865:1870   */\n  dup3\n    /* \"#utility.yul\":1862:1889   */\n  eq\n    /* \"#utility.yul\":1852:1907   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1900:1901   */\n  dup1\n    /* \"#utility.yul\":1893:1905   */\n  revert\n    /* \"#utility.yul\":1852:1907   */\ntag_60:\n    /* \"#utility.yul\":1926:1931   */\n  dup2\n    /* \"#utility.yul\":1916:1931   */\n  swap6\n  pop\n    /* \"#utility.yul\":1971:1974   */\n  0x80\n    /* \"#utility.yul\":1960:1969   */\n  dup11\n    /* \"#utility.yul\":1956:1975   */\n  add\n    /* \"#utility.yul\":1950:1976   */\n  mload\n    /* \"#utility.yul\":1940:1976   */\n  swap5\n  pop\n    /* \"#utility.yul\":1995:2053   */\n  tag_61\n    /* \"#utility.yul\":2048:2051   */\n  0xa0\n    /* \"#utility.yul\":2037:2046   */\n  dup12\n    /* \"#utility.yul\":2033:2052   */\n  add\n    /* \"#utility.yul\":1995:2053   */\n  tag_38\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1985:2053   */\n  swap4\n  pop\n    /* \"#utility.yul\":2099:2102   */\n  0xc0\n    /* \"#utility.yul\":2088:2097   */\n  dup11\n    /* \"#utility.yul\":2084:2103   */\n  add\n    /* \"#utility.yul\":2078:2104   */\n  mload\n    /* \"#utility.yul\":2062:2104   */\n  swap2\n  pop\n    /* \"#utility.yul\":2129:2131   */\n  dup1\n    /* \"#utility.yul\":2119:2127   */\n  dup3\n    /* \"#utility.yul\":2116:2132   */\n  gt\n    /* \"#utility.yul\":2113:2149   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2142:2143   */\n  dup1\n    /* \"#utility.yul\":2135:2147   */\n  revert\n    /* \"#utility.yul\":2113:2149   */\ntag_62:\n  pop\n    /* \"#utility.yul\":2168:2231   */\n  tag_63\n    /* \"#utility.yul\":2223:2230   */\n  dup11\n    /* \"#utility.yul\":2212:2220   */\n  dup3\n    /* \"#utility.yul\":2201:2210   */\n  dup12\n    /* \"#utility.yul\":2197:2221   */\n  add\n    /* \"#utility.yul\":2168:2231   */\n  tag_41\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2158:2231   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1094:2237   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:3189   */\ntag_66:\n    /* \"#utility.yul\":2856:2857   */\n  0x01\n    /* \"#utility.yul\":2899:2904   */\n  dup2\n    /* \"#utility.yul\":2856:2857   */\n  dup2\n    /* \"#utility.yul\":2913:3183   */\ntag_68:\n    /* \"#utility.yul\":2934:2941   */\n  dup1\n    /* \"#utility.yul\":2924:2932   */\n  dup6\n    /* \"#utility.yul\":2921:2942   */\n  gt\n    /* \"#utility.yul\":2913:3183   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2993:2997   */\n  dup2\n    /* \"#utility.yul\":2989:2990   */\n  0x00\n    /* \"#utility.yul\":2985:2991   */\n  not\n    /* \"#utility.yul\":2981:2998   */\n  div\n    /* \"#utility.yul\":2975:2979   */\n  dup3\n    /* \"#utility.yul\":2972:2999   */\n  gt\n    /* \"#utility.yul\":2969:3022   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3002:3020   */\n  tag_72\n  tag_73\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3052:3059   */\n  dup1\n    /* \"#utility.yul\":3042:3050   */\n  dup6\n    /* \"#utility.yul\":3038:3060   */\n  and\n    /* \"#utility.yul\":3035:3090   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3072:3088   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3035:3090   */\ntag_74:\n    /* \"#utility.yul\":3151:3173   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3111:3126   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2913:3183   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2917:2920   */\n  pop\n    /* \"#utility.yul\":2767:3189   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3194:3334   */\ntag_17:\n    /* \"#utility.yul\":3252:3257   */\n  0x00\n    /* \"#utility.yul\":3281:3328   */\n  tag_76\n    /* \"#utility.yul\":3322:3326   */\n  0xff\n    /* \"#utility.yul\":3312:3320   */\n  dup5\n    /* \"#utility.yul\":3308:3327   */\n  and\n    /* \"#utility.yul\":3302:3306   */\n  dup4\n    /* \"#utility.yul\":3281:3328   */\n  tag_77\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3272:3328   */\n  swap4\n    /* \"#utility.yul\":3194:3334   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3339:4145   */\ntag_77:\n    /* \"#utility.yul\":3388:3393   */\n  0x00\n    /* \"#utility.yul\":3418:3426   */\n  dup3\n    /* \"#utility.yul\":3408:3488   */\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":3459:3460   */\n  0x01\n    /* \"#utility.yul\":3473:3478   */\n  jump(tag_78)\n    /* \"#utility.yul\":3408:3488   */\ntag_79:\n    /* \"#utility.yul\":3507:3511   */\n  dup2\n    /* \"#utility.yul\":3497:3573   */\n  tag_80\n  jumpi\n  pop\n    /* \"#utility.yul\":3544:3545   */\n  0x00\n    /* \"#utility.yul\":3558:3563   */\n  jump(tag_78)\n    /* \"#utility.yul\":3497:3573   */\ntag_80:\n    /* \"#utility.yul\":3589:3593   */\n  dup2\n    /* \"#utility.yul\":3607:3608   */\n  0x01\n    /* \"#utility.yul\":3602:3661   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3675:3676   */\n  0x02\n    /* \"#utility.yul\":3670:3800   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3582:3800   */\n  jump(tag_81)\n    /* \"#utility.yul\":3602:3661   */\ntag_82:\n    /* \"#utility.yul\":3632:3633   */\n  0x01\n    /* \"#utility.yul\":3623:3633   */\n  swap2\n  pop\n    /* \"#utility.yul\":3646:3651   */\n  pop\n  jump(tag_78)\n    /* \"#utility.yul\":3670:3800   */\ntag_83:\n    /* \"#utility.yul\":3707:3710   */\n  0xff\n    /* \"#utility.yul\":3697:3705   */\n  dup5\n    /* \"#utility.yul\":3694:3711   */\n  gt\n    /* \"#utility.yul\":3691:3734   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3714:3732   */\n  tag_85\n  tag_73\n  jump\t// in\ntag_85:\n  pop\n  pop\n    /* \"#utility.yul\":3770:3771   */\n  0x01\n    /* \"#utility.yul\":3756:3772   */\n  dup3\n  shl\n    /* \"#utility.yul\":3785:3790   */\n  jump(tag_78)\n    /* \"#utility.yul\":3582:3800   */\ntag_81:\n  pop\n    /* \"#utility.yul\":3884:3886   */\n  0x20\n    /* \"#utility.yul\":3874:3882   */\n  dup4\n    /* \"#utility.yul\":3871:3887   */\n  lt\n    /* \"#utility.yul\":3865:3868   */\n  0x0133\n    /* \"#utility.yul\":3859:3863   */\n  dup4\n    /* \"#utility.yul\":3856:3869   */\n  lt\n    /* \"#utility.yul\":3852:3888   */\n  and\n    /* \"#utility.yul\":3846:3848   */\n  0x4e\n    /* \"#utility.yul\":3836:3844   */\n  dup5\n    /* \"#utility.yul\":3833:3849   */\n  lt\n    /* \"#utility.yul\":3828:3830   */\n  0x0b\n    /* \"#utility.yul\":3822:3826   */\n  dup5\n    /* \"#utility.yul\":3819:3831   */\n  lt\n    /* \"#utility.yul\":3815:3850   */\n  and\n    /* \"#utility.yul\":3812:3889   */\n  or\n    /* \"#utility.yul\":3809:3968   */\n  iszero\n  tag_86\n  jumpi\n  pop\n    /* \"#utility.yul\":3921:3940   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3953:3958   */\n  jump(tag_78)\n    /* \"#utility.yul\":3809:3968   */\ntag_86:\n    /* \"#utility.yul\":4000:4034   */\n  tag_87\n    /* \"#utility.yul\":4025:4033   */\n  dup4\n    /* \"#utility.yul\":4019:4023   */\n  dup4\n    /* \"#utility.yul\":4000:4034   */\n  tag_66\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4070:4076   */\n  dup1\n    /* \"#utility.yul\":4066:4067   */\n  0x00\n    /* \"#utility.yul\":4062:4068   */\n  not\n    /* \"#utility.yul\":4058:4077   */\n  div\n    /* \"#utility.yul\":4049:4056   */\n  dup3\n    /* \"#utility.yul\":4046:4078   */\n  gt\n    /* \"#utility.yul\":4043:4101   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4081:4099   */\n  tag_89\n  tag_73\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4119:4139   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3339:4145   */\ntag_78:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4150:4318   */\ntag_19:\n    /* \"#utility.yul\":4190:4197   */\n  0x00\n    /* \"#utility.yul\":4256:4257   */\n  dup2\n    /* \"#utility.yul\":4252:4253   */\n  0x00\n    /* \"#utility.yul\":4248:4254   */\n  not\n    /* \"#utility.yul\":4244:4258   */\n  div\n    /* \"#utility.yul\":4241:4242   */\n  dup4\n    /* \"#utility.yul\":4238:4259   */\n  gt\n    /* \"#utility.yul\":4233:4234   */\n  dup3\n    /* \"#utility.yul\":4226:4235   */\n  iszero\n    /* \"#utility.yul\":4219:4236   */\n  iszero\n    /* \"#utility.yul\":4215:4260   */\n  and\n    /* \"#utility.yul\":4212:4283   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4263:4281   */\n  tag_92\n  tag_73\n  jump\t// in\ntag_92:\n  pop\n    /* \"#utility.yul\":4303:4312   */\n  mul\n  swap1\n    /* \"#utility.yul\":4150:4318   */\n  jump\t// out\n    /* \"#utility.yul\":4323:4703   */\ntag_27:\n    /* \"#utility.yul\":4402:4403   */\n  0x01\n    /* \"#utility.yul\":4398:4410   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":4445:4457   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":4466:4527   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4520:4524   */\n  0x7f\n    /* \"#utility.yul\":4512:4518   */\n  dup3\n    /* \"#utility.yul\":4508:4525   */\n  and\n    /* \"#utility.yul\":4498:4525   */\n  swap2\n  pop\n    /* \"#utility.yul\":4466:4527   */\ntag_94:\n    /* \"#utility.yul\":4573:4575   */\n  0x20\n    /* \"#utility.yul\":4565:4571   */\n  dup3\n    /* \"#utility.yul\":4562:4576   */\n  lt\n    /* \"#utility.yul\":4542:4560   */\n  dup2\n    /* \"#utility.yul\":4539:4577   */\n  eq\n    /* \"#utility.yul\":4536:4697   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4619:4629   */\n  0x4e487b71\n    /* \"#utility.yul\":4614:4617   */\n  0xe0\n    /* \"#utility.yul\":4610:4630   */\n  shl\n    /* \"#utility.yul\":4607:4608   */\n  0x00\n    /* \"#utility.yul\":4600:4631   */\n  mstore\n    /* \"#utility.yul\":4654:4658   */\n  0x22\n    /* \"#utility.yul\":4651:4652   */\n  0x04\n    /* \"#utility.yul\":4644:4659   */\n  mstore\n    /* \"#utility.yul\":4682:4686   */\n  0x24\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4672:4687   */\n  revert\n    /* \"#utility.yul\":4536:4697   */\ntag_95:\n  pop\n    /* \"#utility.yul\":4323:4703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4708:4835   */\ntag_73:\n    /* \"#utility.yul\":4769:4779   */\n  0x4e487b71\n    /* \"#utility.yul\":4764:4767   */\n  0xe0\n    /* \"#utility.yul\":4760:4780   */\n  shl\n    /* \"#utility.yul\":4757:4758   */\n  0x00\n    /* \"#utility.yul\":4750:4781   */\n  mstore\n    /* \"#utility.yul\":4800:4804   */\n  0x11\n    /* \"#utility.yul\":4797:4798   */\n  0x04\n    /* \"#utility.yul\":4790:4805   */\n  mstore\n    /* \"#utility.yul\":4824:4828   */\n  0x24\n    /* \"#utility.yul\":4821:4822   */\n  0x00\n    /* \"#utility.yul\":4814:4829   */\n  revert\n    /* \"#utility.yul\":4840:4967   */\ntag_46:\n    /* \"#utility.yul\":4901:4911   */\n  0x4e487b71\n    /* \"#utility.yul\":4896:4899   */\n  0xe0\n    /* \"#utility.yul\":4892:4912   */\n  shl\n    /* \"#utility.yul\":4889:4890   */\n  0x00\n    /* \"#utility.yul\":4882:4913   */\n  mstore\n    /* \"#utility.yul\":4932:4936   */\n  0x41\n    /* \"#utility.yul\":4929:4930   */\n  0x04\n    /* \"#utility.yul\":4922:4937   */\n  mstore\n    /* \"#utility.yul\":4956:4960   */\n  0x24\n    /* \"#utility.yul\":4953:4954   */\n  0x00\n    /* \"#utility.yul\":4946:4961   */\n  revert\n    /* \"#utility.yul\":4840:4967   */\ntag_37:\n    /* \"contracts/deployedOmar/omerFinalToken.sol\":12169:17663  contract Q8ERC20Token is Context, IERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12169:17663  contract Q8ERC20Token is Context, IERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc415b95c\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc415b95c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcb2ef6f7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd0b6b6db\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfe71264e\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91ff41ff\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9c38d8eb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x313ce567\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4fb1c53c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6161eb18\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1c0973a4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14977:15065  function name() external override view returns (string memory) {\r... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15607:15760  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":2717:2731   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2710:2732   */\n      iszero\n        /* \"#utility.yul\":2692:2733   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2680:2682   */\n      0x20\n        /* \"#utility.yul\":2665:2683   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15607:15760  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      tag_31\n        /* \"#utility.yul\":2552:2739   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15074:15168  function totalSupply() public override view returns (uint256) {\r... */\n    tag_5:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15150:15162  _totalSupply */\n      sload(0x02)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15074:15168  function totalSupply() public override view returns (uint256) {\r... */\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":7042:7067   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7030:7032   */\n      0x20\n        /* \"#utility.yul\":7015:7033   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15074:15168  function totalSupply() public override view returns (uint256) {\r... */\n      tag_31\n        /* \"#utility.yul\":6896:7073   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12653:12686  string public burnContract=\"burn\" */\n    tag_6:\n      tag_29\n      tag_44\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15768:16069  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_7:\n      tag_33\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14781:14869  function decimals() external override view returns (uint8) {\r... */\n    tag_8:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14854:14863  _decimals */\n      and(0xff, sload(0x03))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14781:14869  function decimals() external override view returns (uint8) {\r... */\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":7250:7254   */\n      0xff\n        /* \"#utility.yul\":7238:7255   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7220:7256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7208:7210   */\n      0x20\n        /* \"#utility.yul\":7193:7211   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14781:14869  function decimals() external override view returns (uint8) {\r... */\n      tag_31\n        /* \"#utility.yul\":7078:7262   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12438:12460  uint8 public _decimals */\n    tag_9:\n      sload(0x03)\n      tag_51\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16077:16277  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_10:\n      tag_33\n      tag_59\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12551:12579  uint256  public DoplymentFee */\n    tag_11:\n      tag_39\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14015:14548  function _burn(address account, uint256 amount) public {\r... */\n    tag_12:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15176:15289  function balanceOf(address account) public override view returns (uint256) {\r... */\n    tag_13:\n      tag_39\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15265:15283  _balances[account] */\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15242:15249  uint256 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15265:15283  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15176:15289  function balanceOf(address account) public override view returns (uint256) {\r... */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17515:17656  function renounceOwnership() public  {\r... */\n    tag_14:\n      tag_65\n      tag_74\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12689:12726  string public doubleContract=\"double\" */\n    tag_15:\n      tag_29\n      tag_76\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14877:14969  function symbol() external override view returns (string memory) {\r... */\n    tag_16:\n      tag_29\n      tag_79\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13434:13998  function _mintSupply(address account, uint256 amount) public {\r... */\n    tag_17:\n      tag_65\n      tag_82\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16285:16530  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_18:\n      tag_33\n      tag_85\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15295:15454  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_19:\n      tag_33\n      tag_89\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12584:12612  address public  feeCollector */\n    tag_20:\n      sload(0x08)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_92:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2508:2540   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2490:2541   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2478:2480   */\n      0x20\n        /* \"#utility.yul\":2463:2481   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12584:12612  address public  feeCollector */\n      tag_31\n        /* \"#utility.yul\":2344:2547   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12729:12755  string public contractType */\n    tag_21:\n      tag_29\n      tag_97\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12617:12650  string public mintContract=\"mint\" */\n    tag_22:\n      tag_29\n      tag_100\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15462:15601  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_23:\n      tag_39\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15568:15586  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15545:15552  uint256 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15568:15586  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15568:15579  _allowances */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15568:15586  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15568:15595  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15462:15601  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17346:17510  function transferOwnership(address _newOwner) public \r... */\n    tag_24:\n      tag_65\n      tag_108\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12518:12546  address public Contractowner */\n    tag_25:\n      sload(0x06)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14977:15065  function name() external override view returns (string memory) {\r... */\n    tag_30:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15025:15038  string memory */\n      0x60\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15054:15059  _name */\n      0x05\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15047:15059  return _name */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14977:15065  function name() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15607:15760  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_36:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15684:15688  bool */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15697:15736  _approve(_msgSender(), spender, amount) */\n      tag_121\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15720:15727  spender */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15729:15735  amount */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15697:15705  _approve */\n      tag_124\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15697:15736  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15750:15754  true */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15607:15760  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12653:12686  string public burnContract=\"burn\" */\n    tag_44:\n      0x0a\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_115\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_115\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15768:16069  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_49:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15868:15872  bool */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15881:15996  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\")) */\n      tag_132\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15890:15896  sender */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15995  _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\") */\n      tag_134\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15950:15956  amount */\n      dup6\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15995  _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_38e0d8978fd41e2442ba5103603f98f09a924e14179783817fca2bd5fcb14b5d\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15931  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15923  _allowances */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15931  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15945  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15949  _allowances[sender][_msgSender()].sub */\n      tag_136\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15912:15995  _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_134:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15881:15889  _approve */\n      tag_124\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15881:15996  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \" transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16003:16039  _transfer(sender, recipient, amount) */\n      tag_137\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16013:16019  sender */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16021:16030  recipient */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16032:16038  amount */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16003:16012  _transfer */\n      tag_138\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16003:16039  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16059:16063  true */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15768:16069  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16077:16277  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_60:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16157:16161  bool */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16227  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16213  _allowances */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16227  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16236  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16157:16161  bool */\n      swap1\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16170:16253  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_121\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16193:16200  spender */\n      dup6\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16252  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_134\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16241:16251  addedValue */\n      dup7\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16240  _allowances[_msgSender()][spender].add */\n      tag_145\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16202:16252  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14015:14548  function _burn(address account, uint256 amount) public {\r... */\n    tag_67:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14157:14169  contractType */\n      0x0c\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14140:14170  abi.encodePacked(contractType) */\n      add(0x20, mload(0x40))\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14130:14171  keccak256(abi.encodePacked(contractType)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14112:14124  burnContract */\n      0x0a\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14095:14125  abi.encodePacked(burnContract) */\n      add(0x20, mload(0x40))\n      tag_149\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14085:14126  keccak256(abi.encodePacked(burnContract)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14085:14171  keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14085:14262  keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n      dup1\n      tag_150\n      jumpi\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14248:14260  contractType */\n      0x0c\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14231:14261  abi.encodePacked(contractType) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14221:14262  keccak256(abi.encodePacked(contractType)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14201:14215  doubleContract */\n      0x0b\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14184:14216  abi.encodePacked(doubleContract) */\n      add(0x20, mload(0x40))\n      tag_152\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14174:14217  keccak256(abi.encodePacked(doubleContract)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14174:14262  keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14085:14262  keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n    tag_150:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14077:14289  require(keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"you didn't choose burn\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3548:3550   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14077:14289  require(keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"you didn't choose burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3530:3551   */\n      mstore\n        /* \"#utility.yul\":3587:3589   */\n      0x16\n        /* \"#utility.yul\":3567:3585   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3560:3590   */\n      mstore\n      shl(0x51, 0x3cb7ba903234b23713ba1031b437b7b9b290313ab937)\n        /* \"#utility.yul\":3606:3624   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3599:3651   */\n      mstore\n        /* \"#utility.yul\":3668:3686   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14077:14289  require(keccak256(abi.encodePacked(burnContract)) == keccak256(abi.encodePacked(contractType)) ||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"you didn't choose burn\") */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14304:14325  account != address(0) */\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14296:14356  require(account != address(0), \"burn from the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6743:6745   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14296:14356  require(account != address(0), \"burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6725:6746   */\n      mstore\n        /* \"#utility.yul\":6782:6784   */\n      0x1a\n        /* \"#utility.yul\":6762:6780   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6755:6785   */\n      mstore\n        /* \"#utility.yul\":6821:6849   */\n      0x6275726e2066726f6d20746865207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":6801:6819   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6794:6850   */\n      mstore\n        /* \"#utility.yul\":6867:6885   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14296:14356  require(account != address(0), \"burn from the zero address\") */\n      tag_154\n        /* \"#utility.yul\":6541:6891   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14296:14356  require(account != address(0), \"burn from the zero address\") */\n    tag_156:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14384:14447  _balances[account].sub(amount, \": burn amount exceeds balance\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x3a206275726e20616d6f756e7420657863656564732062616c616e6365000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14384:14402  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      swap1\n      dup2\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14384:14447  _balances[account].sub(amount, \": burn amount exceeds balance\") */\n      tag_159\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14407:14413  amount */\n      dup4\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14384:14406  _balances[account].sub */\n      tag_136\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14384:14447  _balances[account].sub(amount, \": burn amount exceeds balance\") */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14363:14381  _balances[account] */\n      dup4\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14363:14372  _balances */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14363:14381  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14363:14447  _balances[account] = _balances[account].sub(amount, \": burn amount exceeds balance\") */\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14469:14481  _totalSupply */\n      sload(0x02)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14469:14493  _totalSupply.sub(amount) */\n      tag_160\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14486:14492  amount */\n      dup3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14469:14485  _totalSupply.sub */\n      tag_161\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14469:14493  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14454:14466  _totalSupply */\n      0x02\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14454:14493  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14505:14542  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7042:7067   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14531:14532  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14505:14542  Transfer(account, address(0), amount) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7030:7032   */\n      0x20\n        /* \"#utility.yul\":7015:7033   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14505:14542  Transfer(account, address(0), amount) */\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14015:14548  function _burn(address account, uint256 amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17515:17656  function renounceOwnership() public  {\r... */\n    tag_74:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17579:17592  Contractowner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17567:17577  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17567:17592  msg.sender==Contractowner */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17559:17617  require(msg.sender==Contractowner,\"you are not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_167\n      jump\t// in\n    tag_165:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17624:17637  Contractowner */\n      0x06\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17624:17650  Contractowner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17515:17656  function renounceOwnership() public  {\r... */\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12689:12726  string public doubleContract=\"double\" */\n    tag_76:\n      0x0b\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_115\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14877:14969  function symbol() external override view returns (string memory) {\r... */\n    tag_79:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14927:14940  string memory */\n      0x60\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14956:14963  _symbol */\n      0x04\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":14949:14963  return _symbol */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13434:13998  function _mintSupply(address account, uint256 amount) public {\r... */\n    tag_83:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13582:13594  contractType */\n      0x0c\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13565:13595  abi.encodePacked(contractType) */\n      add(0x20, mload(0x40))\n      tag_180\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13555:13596  keccak256(abi.encodePacked(contractType)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13537:13549  mintContract */\n      0x09\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13520:13550  abi.encodePacked(mintContract) */\n      add(0x20, mload(0x40))\n      tag_181\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13510:13551  keccak256(abi.encodePacked(mintContract)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13510:13596  keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType)) */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13510:13686  keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n      dup1\n      tag_182\n      jumpi\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13672:13684  contractType */\n      0x0c\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13655:13685  abi.encodePacked(contractType) */\n      add(0x20, mload(0x40))\n      tag_183\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13645:13686  keccak256(abi.encodePacked(contractType)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13625:13639  doubleContract */\n      0x0b\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13608:13640  abi.encodePacked(doubleContract) */\n      add(0x20, mload(0x40))\n      tag_184\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13598:13641  keccak256(abi.encodePacked(doubleContract)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13598:13686  keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13510:13686  keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) */\n    tag_182:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13502:13708  require(keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"can not call mint\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13502:13708  require(keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"can not call mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5675:5696   */\n      mstore\n        /* \"#utility.yul\":5732:5734   */\n      0x11\n        /* \"#utility.yul\":5712:5730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5705:5735   */\n      mstore\n      shl(0x7a, 0x18d85b881b9bdd0818d85b1b081b5a5b9d)\n        /* \"#utility.yul\":5751:5769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5744:5791   */\n      mstore\n        /* \"#utility.yul\":5808:5826   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13502:13708  require(keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"can not call mint\") */\n      tag_154\n        /* \"#utility.yul\":5491:5832   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13502:13708  require(keccak256(abi.encodePacked(mintContract)) == keccak256(abi.encodePacked(contractType))||keccak256(abi.encodePacked(doubleContract)) == keccak256(abi.encodePacked(contractType)) ,\"can not call mint\") */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13723:13744  account != address(0) */\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13715:13774  require(account != address(0), \" mint to the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6389:6391   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13715:13774  require(account != address(0), \" mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6371:6392   */\n      mstore\n        /* \"#utility.yul\":6428:6430   */\n      0x19\n        /* \"#utility.yul\":6408:6426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6401:6431   */\n      mstore\n        /* \"#utility.yul\":6467:6494   */\n      0x206d696e7420746f20746865207a65726f206164647265737300000000000000\n        /* \"#utility.yul\":6447:6465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6440:6495   */\n      mstore\n        /* \"#utility.yul\":6512:6530   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13715:13774  require(account != address(0), \" mint to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":6187:6536   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13715:13774  require(account != address(0), \" mint to the zero address\") */\n    tag_188:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13801:13814  Contractowner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13789:13799  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13789:13814  msg.sender==Contractowner */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13781:13839  require(msg.sender==Contractowner,\"you are not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_167\n      jump\t// in\n    tag_191:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13861:13873  _totalSupply */\n      sload(0x02)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13861:13885  _totalSupply.add(amount) */\n      tag_193\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13878:13884  amount */\n      dup3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13861:13877  _totalSupply.add */\n      tag_145\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13861:13885  _totalSupply.add(amount) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13846:13858  _totalSupply */\n      0x02\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13846:13885  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13931  _balances[account] */\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13922  _balances */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13931  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13943  _balances[account].add(amount) */\n      tag_194\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13936:13942  amount */\n      dup3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13935  _balances[account].add */\n      tag_145\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13913:13943  _balances[account].add(amount) */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13910  _balances[account] */\n      dup4\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13901  _balances */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13910  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13943  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13955:13992  Transfer(address(0), account, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":7042:7067   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13910  _balances[account] */\n      swap2\n      swap3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13892:13901  _balances */\n      swap1\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13955:13992  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":7015:7033   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":13955:13992  Transfer(address(0), account, amount) */\n      tag_162\n        /* \"#utility.yul\":6896:7073   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16285:16530  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_86:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16370:16374  bool */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16383:16506  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\")) */\n      tag_121\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16406:16413  spender */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16505  _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\") */\n      tag_134\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16454:16469  subtractedValue */\n      dup6\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16505  _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      0x2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f00\n      dup2\n      mstore\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16426  _allowances */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16440  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16427:16439  _msgSender() */\n      tag_200\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3135:3237  function _msgSender() internal view returns (address payable) {\r... */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16427:16439  _msgSender() */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16440  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16449  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16505  _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\") */\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16453  _allowances[_msgSender()][spender].sub */\n      tag_136\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16415:16505  _allowances[_msgSender()][spender].sub(subtractedValue, \" decreased allowance below zero\") */\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15295:15454  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_90:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15375:15379  bool */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15388:15430  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3220:3230  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15412:15421  recipient */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15423:15429  amount */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15388:15397  _transfer */\n      tag_138\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":15388:15430  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12729:12755  string public contractType */\n    tag_97:\n      0x0c\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_115\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":12617:12650  string public mintContract=\"mint\" */\n    tag_100:\n      0x09\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_115\n      jump\t// in\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17346:17510  function transferOwnership(address _newOwner) public \r... */\n    tag_109:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17431:17444  Contractowner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17419:17429  msg.sender */\n      caller\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17419:17444  msg.sender==Contractowner */\n      eq\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17411:17469  require(msg.sender==Contractowner,\"you are not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_167\n      jump\t// in\n    tag_216:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17480:17493  Contractowner */\n      0x06\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17480:17503  Contractowner=_newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17346:17510  function transferOwnership(address _newOwner) public \r... */\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16981:17339  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17071:17090  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17063:17127  require(owner != address(0), \": approve fromm the zero address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4974:4976   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17063:17127  require(owner != address(0), \": approve fromm the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4956:4977   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4993:5011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4986:5016   */\n      mstore\n        /* \"#utility.yul\":5052:5086   */\n      0x3a20617070726f76652066726f6d6d20746865207a65726f2061646472657373\n        /* \"#utility.yul\":5032:5050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5025:5087   */\n      mstore\n        /* \"#utility.yul\":5104:5122   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17063:17127  require(owner != address(0), \": approve fromm the zero address\") */\n      tag_154\n        /* \"#utility.yul\":4772:5128   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17063:17127  require(owner != address(0), \": approve fromm the zero address\") */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17142:17163  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17134:17198  require(spender != address(0), \": approvee to the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4255:4257   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17134:17198  require(spender != address(0), \": approvee to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4237:4258   */\n      mstore\n        /* \"#utility.yul\":4294:4296   */\n      0x1e\n        /* \"#utility.yul\":4274:4292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4267:4297   */\n      mstore\n        /* \"#utility.yul\":4333:4365   */\n      0x3a20617070726f76656520746f20746865207a65726f20616464726573730000\n        /* \"#utility.yul\":4313:4331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4306:4366   */\n      mstore\n        /* \"#utility.yul\":4383:4401   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17134:17198  require(spender != address(0), \": approvee to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":4053:4407   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17134:17198  require(spender != address(0), \": approvee to the zero address\") */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17253:17271  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17253:17264  _allowances */\n      0x01\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17253:17271  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17253:17280  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17253:17289  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17301:17333  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7042:7067   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17301:17333  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7015:7033   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":17301:17333  Approval(owner, spender, amount) */\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16981:17339  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4015:4193  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_136:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4101:4108  uint256 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4133:4145  errorMessage */\n      dup2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4125:4131  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4117:4146  require(b <= a, errorMessage) */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4153:4162  uint256 c */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4165:4170  a - b */\n      tag_230\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4169:4170  b */\n      dup5\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4165:4166  a */\n      dup7\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4165:4170  a - b */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4153:4170  uint256 c = a - b */\n      swap6\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":4015:4193  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16538:16969  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16632:16652  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16624:16688  require(sender != address(0), \" transfer from the zero address\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4614:4616   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16624:16688  require(sender != address(0), \" transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4596:4617   */\n      mstore\n        /* \"#utility.yul\":4653:4655   */\n      0x1f\n        /* \"#utility.yul\":4633:4651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4626:4656   */\n      mstore\n        /* \"#utility.yul\":4692:4725   */\n      0x207472616e736665722066726f6d20746865207a65726f206164647265737300\n        /* \"#utility.yul\":4672:4690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4665:4726   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16624:16688  require(sender != address(0), \" transfer from the zero address\") */\n      tag_154\n        /* \"#utility.yul\":4412:4767   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16624:16688  require(sender != address(0), \" transfer from the zero address\") */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16703:16726  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16695:16760  require(recipient != address(0), \" transfer to the zero address\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5335:5337   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16695:16760  require(recipient != address(0), \" transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5317:5338   */\n      mstore\n        /* \"#utility.yul\":5374:5376   */\n      0x1d\n        /* \"#utility.yul\":5354:5372   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5347:5377   */\n      mstore\n        /* \"#utility.yul\":5413:5444   */\n      0x207472616e7366657220746f20746865207a65726f2061646472657373000000\n        /* \"#utility.yul\":5393:5411   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5386:5445   */\n      mstore\n        /* \"#utility.yul\":5462:5480   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16695:16760  require(recipient != address(0), \" transfer to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":5133:5486   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16695:16760  require(recipient != address(0), \" transfer to the zero address\") */\n    tag_236:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16789:16854  _balances[sender].sub(amount, \" transfer amount exceeds balance\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x20\n      dup1\n      dup3\n      mstore\n      0x207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n      dup2\n      dup4\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16789:16806  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      swap1\n      dup2\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16789:16854  _balances[sender].sub(amount, \" transfer amount exceeds balance\") */\n      tag_239\n      swap2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16811:16817  amount */\n      dup4\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16789:16810  _balances[sender].sub */\n      tag_136\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16789:16854  _balances[sender].sub(amount, \" transfer amount exceeds balance\") */\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16769:16786  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16769:16778  _balances */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16769:16786  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16769:16854  _balances[sender] = _balances[sender].sub(amount, \" transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16884:16904  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16884:16916  _balances[recipient].add(amount) */\n      tag_240\n      swap1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16909:16915  amount */\n      dup3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16884:16908  _balances[recipient].add */\n      tag_145\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16884:16916  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16861:16881  _balances[recipient] */\n      dup4\n      dup2\n      and\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16861:16870  _balances */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16861:16881  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16861:16916  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16928:16963  Transfer(sender, recipient, amount) */\n      mload\n        /* \"#utility.yul\":7042:7067   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16861:16881  _balances[recipient] */\n      swap1\n      swap3\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16928:16963  Transfer(sender, recipient, amount) */\n      swap2\n      dup7\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":7015:7033   */\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":16928:16963  Transfer(sender, recipient, amount) */\n      tag_226\n        /* \"#utility.yul\":6896:7073   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3702:3869  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_145:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3760:3767  uint256 */\n      0x00\n      dup1\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3788:3793  a + b */\n      tag_243\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3792:3793  b */\n      dup4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3788:3789  a */\n      dup6\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3788:3793  a + b */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3776:3793  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3813:3814  a */\n      dup4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3808:3809  c */\n      dup2\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3808:3814  c >= a */\n      lt\n      iszero\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3800:3846  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3899:3901   */\n      0x20\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3800:3846  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3881:3902   */\n      mstore\n        /* \"#utility.yul\":3938:3940   */\n      0x1b\n        /* \"#utility.yul\":3918:3936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3911:3941   */\n      mstore\n        /* \"#utility.yul\":3977:4006   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":3957:3975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3950:4007   */\n      mstore\n        /* \"#utility.yul\":4024:4042   */\n      0x64\n      add\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3800:3846  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_154\n        /* \"#utility.yul\":3697:4048   */\n      jump\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3800:3846  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_245:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3862:3863  c */\n      swap4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3702:3869  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3877:4007  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_161:\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3935:3942  uint256 */\n      0x00\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3958:4001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_245\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3962:3963  a */\n      dup4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3965:3966  b */\n      dup4\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3958:4001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3958:3961  sub */\n      tag_136\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3958:4001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_251:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_253:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_70:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_255:\n        /* \"#utility.yul\":343:372   */\n      tag_245\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_251\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_104:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_258:\n        /* \"#utility.yul\":551:580   */\n      tag_259\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_251\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_260\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_251\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_48:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_262:\n        /* \"#utility.yul\":833:862   */\n      tag_263\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_251\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_264\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_251\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_35:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_266:\n        /* \"#utility.yul\":1149:1178   */\n      tag_267\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_251\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:2339   */\n    tag_148:\n        /* \"#utility.yul\":1368:1371   */\n      0x00\n        /* \"#utility.yul\":1397:1398   */\n      dup1\n        /* \"#utility.yul\":1430:1436   */\n      dup4\n        /* \"#utility.yul\":1424:1437   */\n      sload\n        /* \"#utility.yul\":1460:1463   */\n      dup2\n        /* \"#utility.yul\":1482:1483   */\n      0x01\n        /* \"#utility.yul\":1510:1519   */\n      dup3\n        /* \"#utility.yul\":1506:1508   */\n      dup2\n        /* \"#utility.yul\":1502:1520   */\n      shr\n        /* \"#utility.yul\":1492:1520   */\n      swap2\n      pop\n        /* \"#utility.yul\":1570:1572   */\n      dup1\n        /* \"#utility.yul\":1559:1568   */\n      dup4\n        /* \"#utility.yul\":1555:1573   */\n      and\n        /* \"#utility.yul\":1592:1610   */\n      dup1\n        /* \"#utility.yul\":1582:1643   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1636:1640   */\n      0x7f\n        /* \"#utility.yul\":1628:1634   */\n      dup4\n        /* \"#utility.yul\":1624:1641   */\n      and\n        /* \"#utility.yul\":1614:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1582:1643   */\n    tag_269:\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1710:1712   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      dup5\n        /* \"#utility.yul\":1699:1713   */\n      lt\n        /* \"#utility.yul\":1679:1697   */\n      dup3\n        /* \"#utility.yul\":1676:1714   */\n      eq\n        /* \"#utility.yul\":1673:1838   */\n      iszero\n      tag_270\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":1737:1770   */\n      dup7\n      mstore\n        /* \"#utility.yul\":1793:1797   */\n      0x22\n        /* \"#utility.yul\":1790:1791   */\n      0x04\n        /* \"#utility.yul\":1783:1798   */\n      mstore\n        /* \"#utility.yul\":1823:1827   */\n      0x24\n        /* \"#utility.yul\":1744:1747   */\n      dup7\n        /* \"#utility.yul\":1811:1828   */\n      revert\n        /* \"#utility.yul\":1673:1838   */\n    tag_270:\n        /* \"#utility.yul\":1854:1872   */\n      dup2\n        /* \"#utility.yul\":1881:1985   */\n      dup1\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1999:2000   */\n      0x01\n        /* \"#utility.yul\":1994:2314   */\n      dup2\n      eq\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1847:2314   */\n      jump(tag_271)\n        /* \"#utility.yul\":1881:1985   */\n    tag_272:\n      not(0xff)\n        /* \"#utility.yul\":1914:1938   */\n      dup7\n      and\n        /* \"#utility.yul\":1902:1939   */\n      dup10\n      mstore\n        /* \"#utility.yul\":1959:1975   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":1881:1985   */\n      jump(tag_271)\n        /* \"#utility.yul\":1994:2314   */\n    tag_273:\n        /* \"#utility.yul\":7340:7341   */\n      0x00\n        /* \"#utility.yul\":7333:7347   */\n      dup11\n      dup2\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x20\n        /* \"#utility.yul\":7364:7382   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2103:2268   */\n    tag_276:\n        /* \"#utility.yul\":2117:2123   */\n      dup7\n        /* \"#utility.yul\":2114:2115   */\n      dup2\n        /* \"#utility.yul\":2111:2124   */\n      lt\n        /* \"#utility.yul\":2103:2268   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2195:2209   */\n      dup2\n      sload\n        /* \"#utility.yul\":2182:2193   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":2175:2210   */\n      mstore\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2132:2142   */\n      dup4\n      add\n        /* \"#utility.yul\":2103:2268   */\n      jump(tag_276)\n    tag_278:\n        /* \"#utility.yul\":2107:2110   */\n      pop\n      pop\n        /* \"#utility.yul\":2297:2303   */\n      dup5\n        /* \"#utility.yul\":2292:2295   */\n      dup10\n        /* \"#utility.yul\":2288:2304   */\n      add\n        /* \"#utility.yul\":2281:2304   */\n      swap7\n      pop\n        /* \"#utility.yul\":1847:2314   */\n    tag_271:\n      pop\n        /* \"#utility.yul\":2330:2333   */\n      swap5\n      swap9\n        /* \"#utility.yul\":1240:2339   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2744:3341   */\n    tag_32:\n        /* \"#utility.yul\":2856:2860   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x20\n        /* \"#utility.yul\":2914:2916   */\n      dup1\n        /* \"#utility.yul\":2903:2912   */\n      dup4\n        /* \"#utility.yul\":2896:2917   */\n      mstore\n        /* \"#utility.yul\":2946:2952   */\n      dup4\n        /* \"#utility.yul\":2940:2953   */\n      mload\n        /* \"#utility.yul\":2989:2995   */\n      dup1\n        /* \"#utility.yul\":2984:2986   */\n      dup3\n        /* \"#utility.yul\":2973:2982   */\n      dup6\n        /* \"#utility.yul\":2969:2987   */\n      add\n        /* \"#utility.yul\":2962:2996   */\n      mstore\n        /* \"#utility.yul\":3014:3015   */\n      0x00\n        /* \"#utility.yul\":3024:3164   */\n    tag_282:\n        /* \"#utility.yul\":3038:3044   */\n      dup2\n        /* \"#utility.yul\":3035:3036   */\n      dup2\n        /* \"#utility.yul\":3032:3045   */\n      lt\n        /* \"#utility.yul\":3024:3164   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3133:3147   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3129:3152   */\n      dup4\n      add\n        /* \"#utility.yul\":3123:3153   */\n      mload\n        /* \"#utility.yul\":3099:3116   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3118:3120   */\n      0x40\n        /* \"#utility.yul\":3095:3121   */\n      add\n        /* \"#utility.yul\":3088:3154   */\n      mstore\n        /* \"#utility.yul\":3053:3063   */\n      dup3\n      add\n        /* \"#utility.yul\":3024:3164   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":3182:3188   */\n      dup2\n        /* \"#utility.yul\":3179:3180   */\n      dup2\n        /* \"#utility.yul\":3176:3189   */\n      gt\n        /* \"#utility.yul\":3173:3264   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3252:3253   */\n      0x00\n        /* \"#utility.yul\":3247:3249   */\n      0x40\n        /* \"#utility.yul\":3238:3244   */\n      dup4\n        /* \"#utility.yul\":3227:3236   */\n      dup8\n        /* \"#utility.yul\":3223:3245   */\n      add\n        /* \"#utility.yul\":3219:3250   */\n      add\n        /* \"#utility.yul\":3212:3254   */\n      mstore\n        /* \"#utility.yul\":3173:3264   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":3325:3327   */\n      0x1f\n        /* \"#utility.yul\":3304:3319   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3300:3329   */\n      and\n        /* \"#utility.yul\":3285:3330   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3332:3334   */\n      0x40\n        /* \"#utility.yul\":3281:3335   */\n      add\n      swap4\n        /* \"#utility.yul\":2744:3341   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:6182   */\n    tag_167:\n        /* \"#utility.yul\":6039:6041   */\n      0x20\n        /* \"#utility.yul\":6021:6042   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6078:6080   */\n      0x15\n        /* \"#utility.yul\":6058:6076   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6051:6081   */\n      mstore\n      shl(0x59, 0x3cb7ba9030b932903737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":6112:6114   */\n      0x40\n        /* \"#utility.yul\":6097:6115   */\n      dup3\n      add\n        /* \"#utility.yul\":6090:6141   */\n      mstore\n        /* \"#utility.yul\":6173:6175   */\n      0x60\n        /* \"#utility.yul\":6158:6176   */\n      add\n      swap1\n        /* \"#utility.yul\":5837:6182   */\n      jump\t// out\n        /* \"#utility.yul\":7393:7521   */\n    tag_244:\n        /* \"#utility.yul\":7433:7436   */\n      0x00\n        /* \"#utility.yul\":7464:7465   */\n      dup3\n        /* \"#utility.yul\":7460:7466   */\n      not\n        /* \"#utility.yul\":7457:7458   */\n      dup3\n        /* \"#utility.yul\":7454:7467   */\n      gt\n        /* \"#utility.yul\":7451:7490   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7470:7488   */\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n      pop\n        /* \"#utility.yul\":7506:7515   */\n      add\n      swap1\n        /* \"#utility.yul\":7393:7521   */\n      jump\t// out\n        /* \"#utility.yul\":7526:7651   */\n    tag_231:\n        /* \"#utility.yul\":7566:7570   */\n      0x00\n        /* \"#utility.yul\":7594:7595   */\n      dup3\n        /* \"#utility.yul\":7591:7592   */\n      dup3\n        /* \"#utility.yul\":7588:7596   */\n      lt\n        /* \"#utility.yul\":7585:7619   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7599:7617   */\n      tag_305\n      tag_302\n      jump\t// in\n    tag_305:\n      pop\n        /* \"#utility.yul\":7636:7645   */\n      sub\n      swap1\n        /* \"#utility.yul\":7526:7651   */\n      jump\t// out\n        /* \"#utility.yul\":7656:8036   */\n    tag_115:\n        /* \"#utility.yul\":7735:7736   */\n      0x01\n        /* \"#utility.yul\":7731:7743   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7778:7790   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7799:7860   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7853:7857   */\n      0x7f\n        /* \"#utility.yul\":7845:7851   */\n      dup3\n        /* \"#utility.yul\":7841:7858   */\n      and\n        /* \"#utility.yul\":7831:7858   */\n      swap2\n      pop\n        /* \"#utility.yul\":7799:7860   */\n    tag_307:\n        /* \"#utility.yul\":7906:7908   */\n      0x20\n        /* \"#utility.yul\":7898:7904   */\n      dup3\n        /* \"#utility.yul\":7895:7909   */\n      lt\n        /* \"#utility.yul\":7875:7893   */\n      dup2\n        /* \"#utility.yul\":7872:7910   */\n      eq\n        /* \"#utility.yul\":7869:8030   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":7952:7962   */\n      0x4e487b71\n        /* \"#utility.yul\":7947:7950   */\n      0xe0\n        /* \"#utility.yul\":7943:7963   */\n      shl\n        /* \"#utility.yul\":7940:7941   */\n      0x00\n        /* \"#utility.yul\":7933:7964   */\n      mstore\n        /* \"#utility.yul\":7987:7991   */\n      0x22\n        /* \"#utility.yul\":7984:7985   */\n      0x04\n        /* \"#utility.yul\":7977:7992   */\n      mstore\n        /* \"#utility.yul\":8015:8019   */\n      0x24\n        /* \"#utility.yul\":8012:8013   */\n      0x00\n        /* \"#utility.yul\":8005:8020   */\n      revert\n        /* \"#utility.yul\":7869:8030   */\n    tag_308:\n      pop\n        /* \"#utility.yul\":7656:8036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8041:8168   */\n    tag_302:\n        /* \"#utility.yul\":8102:8112   */\n      0x4e487b71\n        /* \"#utility.yul\":8097:8100   */\n      0xe0\n        /* \"#utility.yul\":8093:8113   */\n      shl\n        /* \"#utility.yul\":8090:8091   */\n      0x00\n        /* \"#utility.yul\":8083:8114   */\n      mstore\n        /* \"#utility.yul\":8133:8137   */\n      0x11\n        /* \"#utility.yul\":8130:8131   */\n      0x04\n        /* \"#utility.yul\":8123:8138   */\n      mstore\n        /* \"#utility.yul\":8157:8161   */\n      0x24\n        /* \"#utility.yul\":8154:8155   */\n      0x00\n        /* \"#utility.yul\":8147:8162   */\n      revert\n    stop\n    data_38e0d8978fd41e2442ba5103603f98f09a924e14179783817fca2bd5fcb14b5d 207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n\n    auxdata: 0xa26469706673582212203847d039c92c57ffd20acec941db4382ac7e5f475b8d4b5125c0a07b0c794e9f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_payable_fromMemory": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8t_uint256t_address_payablet_string_memory_ptr_fromMemory": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_tuple_t_stringliteral_c699404fc26f31dbf70ed0f76e6d5bb44015d35ed52b37438f39fb84042242c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4969:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "82:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "92:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "107:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "177:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "186:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "147:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "162:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "167:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "158:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "158:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "171:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "154:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "154:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "143:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "143:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "133:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "133:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "126:50:1"
															},
															"nodeType": "YulIf",
															"src": "123:70:1"
														}
													]
												},
												"name": "abi_decode_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "61:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "14:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "268:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "317:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "326:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "319:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "319:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "319:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "296:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "304:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "292:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "292:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "311:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "288:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:35:1"
															},
															"nodeType": "YulIf",
															"src": "278:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "342:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "358:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "352:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "346:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "374:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "392:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "388:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "400:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "378:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "425:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "427:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "427:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "427:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "417:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "421:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "414:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:10:1"
															},
															"nodeType": "YulIf",
															"src": "411:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "470:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "466:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "460:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "482:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "486:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "514:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "536:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "560:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "564:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "556:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "556:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "571:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "552:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "552:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "576:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "548:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "548:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "581:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "518:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "646:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "603:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "615:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "623:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "597:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:46:1"
															},
															"nodeType": "YulIf",
															"src": "594:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "682:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "686:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "675:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "713:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "721:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "733:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "743:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "737:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "793:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "795:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "795:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "795:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "770:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "778:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "766:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "766:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "783:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "762:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "788:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "759:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:33:1"
															},
															"nodeType": "YulIf",
															"src": "756:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "818:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "827:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "822:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "883:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "912:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "920:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "908:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "908:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "924:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "904:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "904:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "943:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "951:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "939:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "939:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "955:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "935:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "935:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "929:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "929:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "897:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "848:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "851:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "845:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "855:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "857:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "866:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "869:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "862:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "862:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "857:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "841:3:1",
																"statements": []
															},
															"src": "837:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1000:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1029:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1037:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1025:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1025:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1042:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1021:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1021:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1014:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1014:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "985:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "988:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "982:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:9:1"
															},
															"nodeType": "YulIf",
															"src": "979:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1068:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1077:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1068:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "242:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "250:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "258:5:1",
														"type": ""
													}
												],
												"src": "204:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:924:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1334:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:33:1"
															},
															"nodeType": "YulIf",
															"src": "1323:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1385:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1405:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1389:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1446:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1450:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1479:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1481:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1481:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1481:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1475:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1464:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:14:1"
															},
															"nodeType": "YulIf",
															"src": "1461:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1504:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1547:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1558:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1567:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1514:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1584:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1621:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1600:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1588:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1654:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1663:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1666:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1656:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1640:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1650:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1637:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:16:1"
															},
															"nodeType": "YulIf",
															"src": "1634:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1679:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1722:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1733:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1718:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1744:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1689:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1761:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1771:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1805:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1824:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1818:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1809:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1891:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1900:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1893:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1893:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1893:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1865:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1876:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1883:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1872:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1872:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1862:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1855:35:1"
															},
															"nodeType": "YulIf",
															"src": "1852:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1926:5:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1940:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1956:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1950:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2048:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1995:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:58:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1985:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2062:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2099:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2084:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:26:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2066:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2133:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2142:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2145:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2135:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2135:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2119:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2129:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2116:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:16:1"
															},
															"nodeType": "YulIf",
															"src": "2113:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2158:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2201:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2212:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2197:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2223:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2168:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:63:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8t_uint256t_address_payablet_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1231:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1242:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1262:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1278:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1286:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1294:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1302:6:1",
														"type": ""
													}
												],
												"src": "1094:1143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"hexValue": "6e6f7420656e6f75676820666565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2522:16:1",
																		"type": "",
																		"value": "not enough fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2548:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2560:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2571:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2548:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c699404fc26f31dbf70ed0f76e6d5bb44015d35ed52b37438f39fb84042242c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2407:4:1",
														"type": ""
													}
												],
												"src": "2242:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2686:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2696:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2708:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2719:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2696:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2749:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2731:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2655:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2677:4:1",
														"type": ""
													}
												],
												"src": "2585:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2841:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2856:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2845:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2866:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2875:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2891:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2899:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2891:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2955:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3000:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3002:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3002:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3002:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2975:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2989:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2985:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2985:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "2993:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "2981:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2981:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "2972:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2972:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2969:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3061:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3063:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3076:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3083:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3072:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3072:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3063:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3042:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3052:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3038:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3038:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3035:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3103:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3115:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3121:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3111:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3111:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3103:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3139:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3155:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3164:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3151:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3151:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3139:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2924:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2934:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2921:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2943:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2917:3:1",
																"statements": []
															},
															"src": "2913:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2795:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2802:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2815:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2822:4:1",
														"type": ""
													}
												],
												"src": "2767:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3262:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3272:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3302:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3312:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3322:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "3281:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3272:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3233:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3239:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3252:5:1",
														"type": ""
													}
												],
												"src": "3194:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3398:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3436:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3450:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3459:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3473:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3418:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:16:1"
															},
															"nodeType": "YulIf",
															"src": "3408:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3521:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3535:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3544:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3558:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3507:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3500:12:1"
															},
															"nodeType": "YulIf",
															"src": "3497:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3609:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3623:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3632:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3623:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3646:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3602:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3607:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3677:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3712:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3714:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3714:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3714:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3697:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3707:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3694:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3694:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3691:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3747:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3760:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3770:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3756:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3756:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3747:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3785:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3670:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3589:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "3582:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3898:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3912:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3925:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3931:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3921:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3921:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3912:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3953:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3822:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3828:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3819:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3819:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3836:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3846:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3833:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3859:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3865:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3856:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3856:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3874:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3884:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3871:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3871:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3852:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3812:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:77:1"
															},
															"nodeType": "YulIf",
															"src": "3809:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4019:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4025:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4000:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3981:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3990:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4079:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4081:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4081:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4049:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4066:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4062:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4062:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4070:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4058:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4046:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:32:1"
															},
															"nodeType": "YulIf",
															"src": "4043:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4110:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4123:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4132:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4110:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3369:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3375:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3388:5:1",
														"type": ""
													}
												],
												"src": "3339:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4202:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4261:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4263:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4263:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4263:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4233:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4226:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4226:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4219:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4241:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4252:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4248:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4248:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4256:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4244:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4244:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4238:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4238:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:45:1"
															},
															"nodeType": "YulIf",
															"src": "4212:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4292:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4307:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4310:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4292:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4181:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4184:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4190:7:1",
														"type": ""
													}
												],
												"src": "4150:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4378:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4388:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4405:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4419:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4449:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4455:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4445:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4423:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4496:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4498:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4512:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4520:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4508:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4508:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4498:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4476:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:26:1"
															},
															"nodeType": "YulIf",
															"src": "4466:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4586:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4607:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4614:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4619:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4610:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4610:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4600:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4600:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4654:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4644:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4644:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4644:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4679:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4682:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4672:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4672:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4672:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4565:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:38:1"
															},
															"nodeType": "YulIf",
															"src": "4536:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4358:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4367:6:1",
														"type": ""
													}
												],
												"src": "4323:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4740:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4757:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4764:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4769:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4760:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4750:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4800:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4790:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4824:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4814:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4708:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4872:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4896:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4901:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4892:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4882:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4929:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4932:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4922:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4946:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4840:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8t_uint256t_address_payablet_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n        value4 := mload(add(headStart, 128))\n        value5 := abi_decode_address_payable_fromMemory(add(headStart, 160))\n        let offset_2 := mload(add(headStart, 192))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value6 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_c699404fc26f31dbf70ed0f76e6d5bb44015d35ed52b37438f39fb84042242c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"not enough fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x4 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x27 SWAP2 PUSH1 0x9 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x313AB937 PUSH1 0xE1 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x55 SWAP2 PUSH1 0xA SWAP2 PUSH3 0x226 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH6 0x646F75626C65 PUSH1 0xD0 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x85 SWAP2 PUSH1 0xB SWAP2 PUSH3 0x226 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16A4 CODESIZE SUB DUP1 PUSH3 0x16A4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0xA8 SWAP2 PUSH3 0x3A0 JUMP JUMPDEST DUP3 CALLVALUE LT ISZERO PUSH3 0xEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F7420656E6F75676820666565 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x103 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH3 0x226 JUMP JUMPDEST POP DUP6 MLOAD PUSH3 0x119 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH3 0x226 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF DUP7 AND PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x14C SWAP1 PUSH1 0xA PUSH3 0x4BD JUMP JUMPDEST PUSH3 0x158 SWAP1 DUP7 PUSH3 0x58B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH3 0x190 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x226 JUMP JUMPDEST POP PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x1DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH3 0x616 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x234 SWAP1 PUSH3 0x5AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x258 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2A3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x273 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2A3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2A3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2A3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x286 JUMP JUMPDEST POP PUSH3 0x2B1 SWAP3 SWAP2 POP PUSH3 0x2B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2B6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x318 JUMPI PUSH3 0x318 PUSH3 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x343 JUMPI PUSH3 0x343 PUSH3 0x600 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x384 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x365 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x396 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3E2 DUP12 DUP4 DUP13 ADD PUSH3 0x2E9 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x407 DUP12 DUP4 DUP13 ADD PUSH3 0x2E9 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD MLOAD SWAP7 POP PUSH1 0x60 DUP11 ADD MLOAD SWAP2 POP PUSH1 0xFF DUP3 AND DUP3 EQ PUSH3 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP5 POP PUSH3 0x43F PUSH1 0xA0 DUP12 ADD PUSH3 0x2CC JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x465 DUP11 DUP3 DUP12 ADD PUSH3 0x2E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4B5 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x499 JUMPI PUSH3 0x499 PUSH3 0x5EA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4A7 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x479 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CE PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x4E6 JUMPI POP PUSH1 0x1 PUSH3 0x585 JUMP JUMPDEST DUP2 PUSH3 0x4F5 JUMPI POP PUSH1 0x0 PUSH3 0x585 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x50E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x519 JUMPI PUSH3 0x539 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x585 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x52D JUMPI PUSH3 0x52D PUSH3 0x5EA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x585 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x55E JUMPI POP DUP2 DUP2 EXP PUSH3 0x585 JUMP JUMPDEST PUSH3 0x56A DUP4 DUP4 PUSH3 0x474 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x581 JUMPI PUSH3 0x581 PUSH3 0x5EA JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x5A8 JUMPI PUSH3 0x5A8 PUSH3 0x5EA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x5E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x107E DUP1 PUSH3 0x626 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC415B95C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xCB2EF6F7 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD0B6B6DB EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xFE71264E EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x91FF41FF EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x9C38D8EB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4FB1C53C EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1C0973A4 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1C7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x197 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x74E JUMP JUMPDEST PUSH2 0x15A PUSH2 0x75B JUMP JUMPDEST PUSH2 0x215 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x366 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x388 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x396 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 DUP5 PUSH2 0xA44 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 DUP5 CALLER PUSH2 0x4B0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1027 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x4C0 DUP5 DUP5 DUP5 PUSH2 0xB8C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3CA SWAP2 DUP6 SWAP1 PUSH2 0x4B0 SWAP1 DUP7 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 PUSH2 0x5A9 JUMPI POP PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA903234B23713BA1031B437B7B9B290313AB937 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E2066726F6D20746865207A65726F2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x3A206275726E20616D6F756E7420657863656564732062616C616E6365000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x6A3 SWAP2 DUP4 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP1 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 PUSH2 0x813 JUMPI POP PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18D85B881B9BDD0818D85B1B081B5A5B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x206D696E7420746F20746865207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8E0 SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x906 SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 PUSH2 0x4B0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2064656372656173656420616C6C6F77616E63652062656C6F77207A65726F00 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x9A0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 DUP5 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3A20617070726F76652066726F6D6D20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3A20617070726F76656520746F20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB83 DUP5 DUP7 PUSH2 0xFBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x207472616E736665722066726F6D20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x207472616E7366657220746F20746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x207472616E7366657220616D6F756E7420657863656564732062616C616E6365 DUP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xC8E SWAP2 DUP4 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xCBD SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD1B DUP4 DUP6 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB52 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6D DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE09 DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE17 PUSH1 0x20 DUP5 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3E DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP PUSH2 0xE4C PUSH1 0x20 DUP6 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xEA2 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xED6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xEE7 JUMPI PUSH2 0xF14 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xF0C JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0xEF3 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF4F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xF33 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3CB7BA9030B932903737BA103A34329037BBB732B9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB9 PUSH2 0x1010 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFD0 PUSH2 0x1010 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x100A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 CODESIZE SELFBALANCE 0xD0 CODECOPY 0xC9 0x2C JUMPI SELFDESTRUCT 0xD2 EXP 0xCE 0xC9 COINBASE 0xDB NUMBER DUP3 0xAC PUSH31 0x5F475B8D4B5125C0A07B0C794E9F64736F6C63430008070033000000000000 ",
							"sourceMap": "12617:33:0:-:0;12169:5494;12617:33;;12169:5494;12617:33;;;-1:-1:-1;;;12617:33:0;;;;;;;;;;:::i;:::-;-1:-1:-1;12653:33:0;;;;;;;;;;;;;-1:-1:-1;;;12653:33:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12689:37:0;;;;;;;;;;;;;-1:-1:-1;;;12689:37:0;;;;;;;;;;;;:::i;:::-;;12766:658;;;;;;;;;;;;;;;;;;:::i;:::-;12979:13;12966:9;:26;;12957:53;;;;-1:-1:-1;;;12957:53:0;;2444:2:1;12957:53:0;;;2426:21:1;2483:2;2463:18;;;2456:30;-1:-1:-1;;;2502:18:1;;;2495:44;2556:18;;12957:53:0;;;;;;;;13017:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;13036:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;13060:9:0;:19;;;;;-1:-1:-1;;13060:19:0;;;;;;;;13086:13;:24;;-1:-1:-1;;;;;;13086:24:0;13100:10;13086:24;;;13148:13;;:2;:13;:::i;:::-;13132:29;;:14;:29;:::i;:::-;13117:12;:44;13184:12;:26;;;13217:12;:26;;-1:-1:-1;;;;;;13217:26:0;-1:-1:-1;;;;;13217:26:0;;;;;13250;;;;:12;;:26;;;;;:::i;:::-;-1:-1:-1;13307:12:0;;13293:10;13283:9;:21;;;;;;;;;;;:36;;;;13325:33;;-1:-1:-1;;;;;13325:22:0;;;13348:9;13325:33;;;;;13348:9;;13325:33;13283:9;13325:33;13348:9;13325:22;:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13403:12:0;;13370:46;;2731:25:1;;;13391:10:0;;13387:1;;13370:46;;2719:2:1;2704:18;13370:46:0;;;;;;;12766:658;;;;;;;12169:5494;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12169:5494:0;;;-1:-1:-1;12169:5494:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:185:1;101:13;;-1:-1:-1;;;;;143:31:1;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:885::-;258:5;311:3;304:4;296:6;292:17;288:27;278:55;;329:1;326;319:12;278:55;352:13;;-1:-1:-1;;;;;414:10:1;;;411:36;;;427:18;;:::i;:::-;502:2;496:9;470:2;556:13;;-1:-1:-1;;552:22:1;;;576:2;548:31;544:40;532:53;;;600:18;;;620:22;;;597:46;594:72;;;646:18;;:::i;:::-;686:10;682:2;675:22;721:2;713:6;706:18;743:4;733:14;;788:3;783:2;778;770:6;766:15;762:24;759:33;756:53;;;805:1;802;795:12;756:53;827:1;818:10;;837:133;851:2;848:1;845:9;837:133;;;939:14;;;935:23;;929:30;908:14;;;904:23;;897:63;862:10;;;;837:133;;;988:2;985:1;982:9;979:80;;;1047:1;1042:2;1037;1029:6;1025:15;1021:24;1014:35;979:80;1077:6;204:885;-1:-1:-1;;;;;;204:885:1:o;1094:1143::-;1254:6;1262;1270;1278;1286;1294;1302;1355:3;1343:9;1334:7;1330:23;1326:33;1323:53;;;1372:1;1369;1362:12;1323:53;1399:16;;-1:-1:-1;;;;;1464:14:1;;;1461:34;;;1491:1;1488;1481:12;1461:34;1514:61;1567:7;1558:6;1547:9;1543:22;1514:61;:::i;:::-;1504:71;;1621:2;1610:9;1606:18;1600:25;1584:41;;1650:2;1640:8;1637:16;1634:36;;;1666:1;1663;1656:12;1634:36;1689:63;1744:7;1733:8;1722:9;1718:24;1689:63;:::i;:::-;1679:73;;1792:2;1781:9;1777:18;1771:25;1761:35;;1839:2;1828:9;1824:18;1818:25;1805:38;;1883:4;1876:5;1872:16;1865:5;1862:27;1852:55;;1903:1;1900;1893:12;1852:55;1926:5;1916:15;;1971:3;1960:9;1956:19;1950:26;1940:36;;1995:58;2048:3;2037:9;2033:19;1995:58;:::i;:::-;1985:68;;2099:3;2088:9;2084:19;2078:26;2062:42;;2129:2;2119:8;2116:16;2113:36;;;2145:1;2142;2135:12;2113:36;;2168:63;2223:7;2212:8;2201:9;2197:24;2168:63;:::i;:::-;2158:73;;;1094:1143;;;;;;;;;;:::o;2767:422::-;2856:1;2899:5;2856:1;2913:270;2934:7;2924:8;2921:21;2913:270;;;2993:4;2989:1;2985:6;2981:17;2975:4;2972:27;2969:53;;;3002:18;;:::i;:::-;3052:7;3042:8;3038:22;3035:55;;;3072:16;;;;3035:55;3151:22;;;;3111:15;;;;2913:270;;;2917:3;2767:422;;;;;:::o;3194:140::-;3252:5;3281:47;3322:4;3312:8;3308:19;3302:4;3281:47;:::i;:::-;3272:56;3194:140;-1:-1:-1;;;3194:140:1:o;3339:806::-;3388:5;3418:8;3408:80;;-1:-1:-1;3459:1:1;3473:5;;3408:80;3507:4;3497:76;;-1:-1:-1;3544:1:1;3558:5;;3497:76;3589:4;3607:1;3602:59;;;;3675:1;3670:130;;;;3582:218;;3602:59;3632:1;3623:10;;3646:5;;;3670:130;3707:3;3697:8;3694:17;3691:43;;;3714:18;;:::i;:::-;-1:-1:-1;;3770:1:1;3756:16;;3785:5;;3582:218;;3884:2;3874:8;3871:16;3865:3;3859:4;3856:13;3852:36;3846:2;3836:8;3833:16;3828:2;3822:4;3819:12;3815:35;3812:77;3809:159;;;-1:-1:-1;3921:19:1;;;3953:5;;3809:159;4000:34;4025:8;4019:4;4000:34;:::i;:::-;4070:6;4066:1;4062:6;4058:19;4049:7;4046:32;4043:58;;;4081:18;;:::i;:::-;4119:20;;-1:-1:-1;3339:806:1;;;;;:::o;4150:168::-;4190:7;4256:1;4252;4248:6;4244:14;4241:1;4238:21;4233:1;4226:9;4219:17;4215:45;4212:71;;;4263:18;;:::i;:::-;-1:-1:-1;4303:9:1;;4150:168::o;4323:380::-;4402:1;4398:12;;;;4445;;;4466:61;;4520:4;4512:6;4508:17;4498:27;;4466:61;4573:2;4565:6;4562:14;4542:18;4539:38;4536:161;;;4619:10;4614:3;4610:20;4607:1;4600:31;4654:4;4651:1;4644:15;4682:4;4679:1;4672:15;4536:161;;4323:380;;;:::o;4708:127::-;4769:10;4764:3;4760:20;4757:1;4750:31;4800:4;4797:1;4790:15;4824:4;4821:1;4814:15;4840:127;4901:10;4896:3;4892:20;4889:1;4882:31;4932:4;4929:1;4922:15;4956:4;4953:1;4946:15;4840:127;12169:5494:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Contractowner_653": {
									"entryPoint": null,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DoplymentFee_655": {
									"entryPoint": null,
									"id": 655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1246": {
									"entryPoint": 2628,
									"id": 1246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_916": {
									"entryPoint": 1280,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_decimals_647": {
									"entryPoint": null,
									"id": 647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mintSupply_839": {
									"entryPoint": 1898,
									"id": 839,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_110": {
									"entryPoint": null,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1202": {
									"entryPoint": 2956,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_148": {
									"entryPoint": 3342,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1051": {
									"entryPoint": 957,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnContract_663": {
									"entryPoint": 979,
									"id": 663,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contractType_668": {
									"entryPoint": 2526,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_954": {
									"entryPoint": null,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1143": {
									"entryPoint": 2388,
									"id": 1143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@doubleContract_666": {
									"entryPoint": 1870,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeCollector_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_1115": {
									"entryPoint": 1226,
									"id": 1115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintContract_660": {
									"entryPoint": 2539,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_972": {
									"entryPoint": 811,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1283": {
									"entryPoint": 1810,
									"id": 1283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_164": {
									"entryPoint": 3444,
									"id": 164,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_191": {
									"entryPoint": 2898,
									"id": 191,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_963": {
									"entryPoint": 1883,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1088": {
									"entryPoint": 1121,
									"id": 1088,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1264": {
									"entryPoint": 2552,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1014": {
									"entryPoint": 2513,
									"id": 1014,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f6adc598200bbf34e9424f27327b7529228e6889a1c2885ba3783a4ff5a5b7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52708ef92082fc49488f0286eda9ffe97f75ec978193ee8cf8f2d6f9d7246abc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a2a45f7a0ae5e3c927b935ec9594898e983dccfc1b9ff5eee4a4adedc2b84dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7eab23e330332fdb5abf41c1091a869894ff09afcdd5179be65fda7bbf8e840a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddc3bbe3c2124b6ca322351f7476ba90eb2af82a753bb21b582bcf89625febd1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8170:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1376:963:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1386:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1397:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "1390:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1407:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1430:6:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1424:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:13:1"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "1411:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1446:17:1",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "1460:3:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1450:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1472:11:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1482:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1476:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1492:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1506:2:1"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "1510:9:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:18:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1529:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1570:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:18:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1533:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1612:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1614:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1628:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1636:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1624:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1624:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1592:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:26:1"
															},
															"nodeType": "YulIf",
															"src": "1582:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1652:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1662:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1656:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1723:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1744:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1753:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1758:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1749:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1749:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1737:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1823:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1811:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1811:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1811:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1679:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1702:6:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1710:2:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1699:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1676:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:38:1"
															},
															"nodeType": "YulIf",
															"src": "1673:165:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1888:97:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1909:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "1918:9:1"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1933:3:1",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "1929:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1929:8:1"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "1914:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1914:24:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "1902:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1902:37:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1902:37:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1952:23:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1963:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1968:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1959:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1959:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "1952:3:1"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1881:104:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1886:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2001:313:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2015:52:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "2060:6:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2030:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2030:37:1"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "2019:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2080:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2084:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2157:111:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "2186:3:1"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "2191:1:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2182:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2182:11:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "2201:7:1"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "2195:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2195:14:1"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "2175:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2175:35:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2175:35:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2227:27:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "2242:7:1"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "2251:2:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2238:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2238:16:1"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "2227:7:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2114:1:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2117:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2111:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2111:13:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2125:19:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2127:15:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2136:1:1"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "2139:2:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2132:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2132:10:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2127:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2107:3:1",
																					"statements": []
																				},
																				"src": "2103:165:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "2281:23:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2292:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2297:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2288:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2288:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "2281:3:1"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1994:320:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:1",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "1854:18:1"
															},
															"nodeType": "YulSwitch",
															"src": "1847:467:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:10:1",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "2330:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1352:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1368:3:1",
														"type": ""
													}
												],
												"src": "1240:1099:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2445:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2455:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2467:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2478:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2455:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2497:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2528:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2533:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2524:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2524:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2537:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2520:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2520:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2508:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2490:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:1",
														"type": ""
													}
												],
												"src": "2344:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2647:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2657:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2669:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2680:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2657:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2724:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2717:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2717:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2710:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2710:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2692:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2616:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2627:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2638:4:1",
														"type": ""
													}
												],
												"src": "2552:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2865:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2885:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2879:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2903:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2914:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2896:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2926:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2946:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2940:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2930:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2973:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2984:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2989:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3005:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3014:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3009:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3074:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3103:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3114:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3099:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3099:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3118:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3095:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3095:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3137:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3145:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3133:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3133:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3149:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3129:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3129:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3123:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3123:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3088:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3035:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3032:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3046:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3048:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3057:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3060:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3053:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3048:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3028:3:1",
																"statements": []
															},
															"src": "3024:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3198:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3227:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3238:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3223:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3223:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3247:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3219:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3219:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3252:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3212:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3179:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3182:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:13:1"
															},
															"nodeType": "YulIf",
															"src": "3173:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3308:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3316:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3304:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3304:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3325:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3321:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3321:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3300:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3285:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3285:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3332:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2834:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2845:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2856:4:1",
														"type": ""
													}
												],
												"src": "2744:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3530:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3582:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3560:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3621:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3606:18:1"
																	},
																	{
																		"hexValue": "796f75206469646e27742063686f6f7365206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3626:24:1",
																		"type": "",
																		"value": "you didn't choose burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3599:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3660:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3672:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3660:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f6adc598200bbf34e9424f27327b7529228e6889a1c2885ba3783a4ff5a5b7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3497:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3511:4:1",
														"type": ""
													}
												],
												"src": "3346:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3888:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3899:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3881:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3933:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3918:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3911:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3961:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3972:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3957:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3977:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3950:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4016:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4039:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4016:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3848:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3862:4:1",
														"type": ""
													}
												],
												"src": "3697:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4227:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4294:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:1"
																	},
																	{
																		"hexValue": "3a20617070726f76656520746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4333:32:1",
																		"type": "",
																		"value": ": approvee to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4306:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4306:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4375:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4387:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4383:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4375:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52708ef92082fc49488f0286eda9ffe97f75ec978193ee8cf8f2d6f9d7246abc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4218:4:1",
														"type": ""
													}
												],
												"src": "4053:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4586:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4614:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4596:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4596:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4648:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4633:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4626:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4626:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4687:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4672:18:1"
																	},
																	{
																		"hexValue": "207472616e736665722066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4692:33:1",
																		"type": "",
																		"value": " transfer from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4665:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4735:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4747:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4743:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4735:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4563:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4577:4:1",
														"type": ""
													}
												],
												"src": "4412:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4946:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4963:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4956:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5008:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4993:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4986:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4986:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5036:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5047:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5032:18:1"
																	},
																	{
																		"hexValue": "3a20617070726f76652066726f6d6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5052:34:1",
																		"type": "",
																		"value": ": approve fromm the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5025:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5108:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5104:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5096:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a2a45f7a0ae5e3c927b935ec9594898e983dccfc1b9ff5eee4a4adedc2b84dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4923:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4937:4:1",
														"type": ""
													}
												],
												"src": "4772:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5307:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5317:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5369:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5374:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5347:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5397:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5408:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:18:1"
																	},
																	{
																		"hexValue": "207472616e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5413:31:1",
																		"type": "",
																		"value": " transfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5386:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5454:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5477:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5454:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5284:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5298:4:1",
														"type": ""
													}
												],
												"src": "5133:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5665:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5682:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5675:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5675:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5727:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5712:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5732:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5705:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5766:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5751:18:1"
																	},
																	{
																		"hexValue": "63616e206e6f742063616c6c206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5771:19:1",
																		"type": "",
																		"value": "can not call mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5744:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5800:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5812:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5823:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5800:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7eab23e330332fdb5abf41c1091a869894ff09afcdd5179be65fda7bbf8e840a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5642:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5656:4:1",
														"type": ""
													}
												],
												"src": "5491:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6039:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6078:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6101:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6112:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6097:18:1"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6117:23:1",
																		"type": "",
																		"value": "you are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6090:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6150:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6158:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6150:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5988:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6002:4:1",
														"type": ""
													}
												],
												"src": "5837:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6371:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6408:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6401:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6462:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6447:18:1"
																	},
																	{
																		"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6467:27:1",
																		"type": "",
																		"value": " mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6440:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6504:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6516:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6504:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6338:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6352:4:1",
														"type": ""
													}
												],
												"src": "6187:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6715:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6732:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6777:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6762:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6782:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6755:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6805:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6816:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6801:18:1"
																	},
																	{
																		"hexValue": "6275726e2066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6821:28:1",
																		"type": "",
																		"value": "burn from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6794:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6871:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6882:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6859:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddc3bbe3c2124b6ca322351f7476ba90eb2af82a753bb21b582bcf89625febd1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6692:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6706:4:1",
														"type": ""
													}
												],
												"src": "6541:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6997:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7007:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7007:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7049:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7060:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7042:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7042:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6966:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6977:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6988:4:1",
														"type": ""
													}
												],
												"src": "6896:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7175:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7185:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7227:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7242:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7238:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7220:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7220:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7144:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7155:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7166:4:1",
														"type": ""
													}
												],
												"src": "7078:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7323:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7340:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7343:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7333:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7356:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7364:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7356:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7306:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7314:4:1",
														"type": ""
													}
												],
												"src": "7267:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7441:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7457:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7464:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7460:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7454:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7454:13:1"
															},
															"nodeType": "YulIf",
															"src": "7451:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7499:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7510:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7513:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7499:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7424:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7427:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7433:3:1",
														"type": ""
													}
												],
												"src": "7393:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7575:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7597:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7599:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7599:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7594:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7588:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:8:1"
															},
															"nodeType": "YulIf",
															"src": "7585:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7628:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7640:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7643:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7636:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7628:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7557:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7560:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7566:4:1",
														"type": ""
													}
												],
												"src": "7526:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7711:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7721:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7738:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7752:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7782:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7788:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7756:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7829:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7831:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7845:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7841:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7841:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7831:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7809:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:26:1"
															},
															"nodeType": "YulIf",
															"src": "7799:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7919:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7940:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7947:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7952:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7943:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7943:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7933:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7933:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7933:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7984:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7987:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7977:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7977:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8015:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8005:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8005:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8005:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7875:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7898:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7895:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7872:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7872:38:1"
															},
															"nodeType": "YulIf",
															"src": "7869:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7691:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7700:6:1",
														"type": ""
													}
												],
												"src": "7656:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8097:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8102:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8083:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8130:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8123:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8123:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8154:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8157:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8147:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8041:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6adc598200bbf34e9424f27327b7529228e6889a1c2885ba3783a4ff5a5b7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"you didn't choose burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52708ef92082fc49488f0286eda9ffe97f75ec978193ee8cf8f2d6f9d7246abc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \": approvee to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \" transfer from the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a2a45f7a0ae5e3c927b935ec9594898e983dccfc1b9ff5eee4a4adedc2b84dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \": approve fromm the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \" transfer to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7eab23e330332fdb5abf41c1091a869894ff09afcdd5179be65fda7bbf8e840a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"can not call mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"you are not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \" mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc3bbe3c2124b6ca322351f7476ba90eb2af82a753bb21b582bcf89625febd1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"burn from the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC415B95C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xCB2EF6F7 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD0B6B6DB EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xFE71264E EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x91FF41FF EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x9C38D8EB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4FB1C53C EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1C0973A4 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1C7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x197 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x74E JUMP JUMPDEST PUSH2 0x15A PUSH2 0x75B JUMP JUMPDEST PUSH2 0x215 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x366 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x388 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x396 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 DUP5 PUSH2 0xA44 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 DUP5 CALLER PUSH2 0x4B0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1027 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x4C0 DUP5 DUP5 DUP5 PUSH2 0xB8C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3CA SWAP2 DUP6 SWAP1 PUSH2 0x4B0 SWAP1 DUP7 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 PUSH2 0x5A9 JUMPI POP PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA903234B23713BA1031B437B7B9B290313AB937 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E2066726F6D20746865207A65726F2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x3A206275726E20616D6F756E7420657863656564732062616C616E6365000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x6A3 SWAP2 DUP4 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP1 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 PUSH2 0x813 JUMPI POP PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18D85B881B9BDD0818D85B1B081B5A5B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x206D696E7420746F20746865207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8E0 SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x906 SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 PUSH2 0x4B0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2064656372656173656420616C6C6F77616E63652062656C6F77207A65726F00 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x9A0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA CALLER DUP5 DUP5 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x3E0 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3A20617070726F76652066726F6D6D20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3A20617070726F76656520746F20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB83 DUP5 DUP7 PUSH2 0xFBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x207472616E736665722066726F6D20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x207472616E7366657220746F20746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x207472616E7366657220616D6F756E7420657863656564732062616C616E6365 DUP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xC8E SWAP2 DUP4 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xCBD SWAP1 DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD1B DUP4 DUP6 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB52 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6D DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE09 DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE17 PUSH1 0x20 DUP5 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3E DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP PUSH2 0xE4C PUSH1 0x20 DUP6 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xEA2 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xED6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xEE7 JUMPI PUSH2 0xF14 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xF0C JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0xEF3 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF4F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xF33 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3CB7BA9030B932903737BA103A34329037BBB732B9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB9 PUSH2 0x1010 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFD0 PUSH2 0x1010 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x100A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 CODESIZE SELFBALANCE 0xD0 CODECOPY 0xC9 0x2C JUMPI SELFDESTRUCT 0xD2 EXP 0xCE 0xC9 COINBASE 0xDB NUMBER DUP3 0xAC PUSH31 0x5F475B8D4B5125C0A07B0C794E9F64736F6C63430008070033000000000000 ",
							"sourceMap": "12169:5494:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14977:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15607:153;;;;;;:::i;:::-;;:::i;:::-;;;2717:14:1;;2710:22;2692:41;;2680:2;2665:18;15607:153:0;2552:187:1;15074:94:0;15150:12;;15074:94;;;7042:25:1;;;7030:2;7015:18;15074:94:0;6896:177:1;12653:33:0;;;:::i;15768:301::-;;;;;;:::i;:::-;;:::i;14781:88::-;14854:9;;;;14781:88;;;7250:4:1;7238:17;;;7220:36;;7208:2;7193:18;14781:88:0;7078:184:1;12438:22:0;;;;;;;;;16077:200;;;;;;:::i;:::-;;:::i;12551:28::-;;;;;;14015:533;;;;;;:::i;:::-;;:::i;:::-;;15176:113;;;;;;:::i;:::-;-1:-1:-1;;;;;15265:18:0;15242:7;15265:18;;;;;;;;;;;;15176:113;17515:141;;;:::i;12689:37::-;;;:::i;14877:92::-;;;:::i;13434:564::-;;;;;;:::i;:::-;;:::i;16285:245::-;;;;;;:::i;:::-;;:::i;15295:159::-;;;;;;:::i;:::-;;:::i;12584:28::-;;;;;-1:-1:-1;;;;;12584:28:0;;;;;;-1:-1:-1;;;;;2508:32:1;;;2490:51;;2478:2;2463:18;12584:28:0;2344:203:1;12729:26:0;;;:::i;12617:33::-;;;:::i;15462:139::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15568:18:0;;;15545:7;15568:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;15462:139;17346:164;;;;;;:::i;:::-;;:::i;12518:28::-;;;;;-1:-1:-1;;;;;12518:28:0;;;14977:88;15025:13;15054:5;15047:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14977:88;:::o;15607:153::-;15684:4;15697:39;3220:10;15720:7;15729:6;15697:8;:39::i;:::-;-1:-1:-1;15750:4:0;15607:153;;;;:::o;12653:33::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15768:301::-;15868:4;15881:115;15890:6;3220:10;15912:83;15950:6;15912:83;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15912:19:0;;;;;;:11;:19;;;;;;;;3220:10;15912:33;;;;;;;;;;:37;:83::i;:::-;15881:8;:115::i;:::-;16003:36;16013:6;16021:9;16032:6;16003:9;:36::i;:::-;-1:-1:-1;16059:4:0;15768:301;;;;;:::o;16077:200::-;3220:10;16157:4;16202:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;16202:34:0;;;;;;;;;;16157:4;;16170:83;;16193:7;;16202:50;;16241:10;16202:38;:50::i;14015:533::-;14157:12;14140:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;14130:41;;;;;;14112:12;14095:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;14085:41;;;;;;:86;:177;;;;14248:12;14231:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;14221:41;;;;;;14201:14;14184:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;14174:43;;;;;;:88;14085:177;14077:212;;;;-1:-1:-1;;;14077:212:0;;3548:2:1;14077:212:0;;;3530:21:1;3587:2;3567:18;;;3560:30;-1:-1:-1;;;3606:18:1;;;3599:52;3668:18;;14077:212:0;;;;;;;;;-1:-1:-1;;;;;14304:21:0;;14296:60;;;;-1:-1:-1;;;14296:60:0;;6743:2:1;14296:60:0;;;6725:21:1;6782:2;6762:18;;;6755:30;6821:28;6801:18;;;6794:56;6867:18;;14296:60:0;6541:350:1;14296:60:0;14384:63;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14384:18:0;;-1:-1:-1;14384:18:0;;;;;;;;;;;;:63;;14407:6;;14384:22;:63::i;:::-;-1:-1:-1;;;;;14363:18:0;;:9;:18;;;;;;;;;;:84;14469:12;;:24;;14486:6;14469:16;:24::i;:::-;14454:12;:39;14505:37;;7042:25:1;;;14531:1:0;;-1:-1:-1;;;;;14505:37:0;;;;;7030:2:1;7015:18;14505:37:0;;;;;;;;14015:533;;:::o;17515:141::-;17579:13;;-1:-1:-1;;;;;17579:13:0;17567:10;:25;17559:58;;;;-1:-1:-1;;;17559:58:0;;;;;;;:::i;:::-;17624:13;:26;;-1:-1:-1;;;;;;17624:26:0;;;17515:141::o;12689:37::-;;;;;;;:::i;14877:92::-;14927:13;14956:7;14949:14;;;;;:::i;13434:564::-;13582:12;13565:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;13555:41;;;;;;13537:12;13520:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;13510:41;;;;;;:86;:176;;;;13672:12;13655:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;13645:41;;;;;;13625:14;13608:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;13598:43;;;;;;:88;13510:176;13502:206;;;;-1:-1:-1;;;13502:206:0;;5693:2:1;13502:206:0;;;5675:21:1;5732:2;5712:18;;;5705:30;-1:-1:-1;;;5751:18:1;;;5744:47;5808:18;;13502:206:0;5491:341:1;13502:206:0;-1:-1:-1;;;;;13723:21:0;;13715:59;;;;-1:-1:-1;;;13715:59:0;;6389:2:1;13715:59:0;;;6371:21:1;6428:2;6408:18;;;6401:30;6467:27;6447:18;;;6440:55;6512:18;;13715:59:0;6187:349:1;13715:59:0;13801:13;;-1:-1:-1;;;;;13801:13:0;13789:10;:25;13781:58;;;;-1:-1:-1;;;13781:58:0;;;;;;;:::i;:::-;13861:12;;:24;;13878:6;13861:16;:24::i;:::-;13846:12;:39;-1:-1:-1;;;;;13913:18:0;;:9;:18;;;;;;;;;;;:30;;13936:6;13913:22;:30::i;:::-;-1:-1:-1;;;;;13892:18:0;;:9;:18;;;;;;;;;;;:51;;;;13955:37;;7042:25:1;;;13892:18:0;;:9;;13955:37;;7015:18:1;13955:37:0;6896:177:1;16285:245:0;16370:4;16383:123;3220:10;16406:7;16415:90;16454:15;16415:90;;;;;;;;;;;;;;;;;:11;:25;16427:12;3220:10;;3135:102;16427:12;-1:-1:-1;;;;;16415:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16415:25:0;;;:34;;;;;;;;;;;:90;:38;:90::i;15295:159::-;15375:4;15388:42;3220:10;15412:9;15423:6;15388:9;:42::i;12729:26::-;;;;;;;:::i;12617:33::-;;;;;;;:::i;17346:164::-;17431:13;;-1:-1:-1;;;;;17431:13:0;17419:10;:25;17411:58;;;;-1:-1:-1;;;17411:58:0;;;;;;;:::i;:::-;17480:13;:23;;-1:-1:-1;;;;;;17480:23:0;-1:-1:-1;;;;;17480:23:0;;;;;;;;;;17346:164::o;16981:358::-;-1:-1:-1;;;;;17071:19:0;;17063:64;;;;-1:-1:-1;;;17063:64:0;;4974:2:1;17063:64:0;;;4956:21:1;;;4993:18;;;4986:30;5052:34;5032:18;;;5025:62;5104:18;;17063:64:0;4772:356:1;17063:64:0;-1:-1:-1;;;;;17142:21:0;;17134:64;;;;-1:-1:-1;;;17134:64:0;;4255:2:1;17134:64:0;;;4237:21:1;4294:2;4274:18;;;4267:30;4333:32;4313:18;;;4306:60;4383:18;;17134:64:0;4053:354:1;17134:64:0;-1:-1:-1;;;;;17253:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17301:32;;7042:25:1;;;17301:32:0;;7015:18:1;17301:32:0;;;;;;;;16981:358;;;:::o;4015:178::-;4101:7;4133:12;4125:6;;;;4117:29;;;;-1:-1:-1;;;4117:29:0;;;;;;;;:::i;:::-;-1:-1:-1;4153:9:0;4165:5;4169:1;4165;:5;:::i;:::-;4153:17;4015:178;-1:-1:-1;;;;;4015:178:0:o;16538:431::-;-1:-1:-1;;;;;16632:20:0;;16624:64;;;;-1:-1:-1;;;16624:64:0;;4614:2:1;16624:64:0;;;4596:21:1;4653:2;4633:18;;;4626:30;4692:33;4672:18;;;4665:61;4743:18;;16624:64:0;4412:355:1;16624:64:0;-1:-1:-1;;;;;16703:23:0;;16695:65;;;;-1:-1:-1;;;16695:65:0;;5335:2:1;16695:65:0;;;5317:21:1;5374:2;5354:18;;;5347:30;5413:31;5393:18;;;5386:59;5462:18;;16695:65:0;5133:353:1;16695:65:0;16789;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16789:17:0;;-1:-1:-1;16789:17:0;;;;;;;;;;;;:65;;16811:6;;16789:21;:65::i;:::-;-1:-1:-1;;;;;16769:17:0;;;:9;:17;;;;;;;;;;;:85;;;;16884:20;;;;;;;:32;;16909:6;16884:24;:32::i;:::-;-1:-1:-1;;;;;16861:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;16928:35;7042:25:1;;;16861:20:0;;16928:35;;;;;;7015:18:1;16928:35:0;6896:177:1;3702:167:0;3760:7;;3788:5;3792:1;3788;:5;:::i;:::-;3776:17;;3813:1;3808;:6;;3800:46;;;;-1:-1:-1;;;3800:46:0;;3899:2:1;3800:46:0;;;3881:21:1;3938:2;3918:18;;;3911:30;3977:29;3957:18;;;3950:57;4024:18;;3800:46:0;3697:351:1;3800:46:0;3862:1;3702:167;-1:-1:-1;;;3702:167:0:o;3877:130::-;3935:7;3958:43;3962:1;3965;3958:43;;;;;;;;;;;;;;;;;:3;:43::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1240:1099::-;1368:3;1397:1;1430:6;1424:13;1460:3;1482:1;1510:9;1506:2;1502:18;1492:28;;1570:2;1559:9;1555:18;1592;1582:61;;1636:4;1628:6;1624:17;1614:27;;1582:61;1662:2;1710;1702:6;1699:14;1679:18;1676:38;1673:165;;;-1:-1:-1;;;1737:33:1;;1793:4;1790:1;1783:15;1823:4;1744:3;1811:17;1673:165;1854:18;1881:104;;;;1999:1;1994:320;;;;1847:467;;1881:104;-1:-1:-1;;1914:24:1;;1902:37;;1959:16;;;;-1:-1:-1;1881:104:1;;1994:320;7340:1;7333:14;;;7377:4;7364:18;;2089:1;2103:165;2117:6;2114:1;2111:13;2103:165;;;2195:14;;2182:11;;;2175:35;2238:16;;;;2132:10;;2103:165;;;2107:3;;2297:6;2292:3;2288:16;2281:23;;1847:467;-1:-1:-1;2330:3:1;;1240:1099;-1:-1:-1;;;;;;;;1240:1099:1:o;2744:597::-;2856:4;2885:2;2914;2903:9;2896:21;2946:6;2940:13;2989:6;2984:2;2973:9;2969:18;2962:34;3014:1;3024:140;3038:6;3035:1;3032:13;3024:140;;;3133:14;;;3129:23;;3123:30;3099:17;;;3118:2;3095:26;3088:66;3053:10;;3024:140;;;3182:6;3179:1;3176:13;3173:91;;;3252:1;3247:2;3238:6;3227:9;3223:22;3219:31;3212:42;3173:91;-1:-1:-1;3325:2:1;3304:15;-1:-1:-1;;3300:29:1;3285:45;;;;3332:2;3281:54;;2744:597;-1:-1:-1;;;2744:597:1:o;5837:345::-;6039:2;6021:21;;;6078:2;6058:18;;;6051:30;-1:-1:-1;;;6112:2:1;6097:18;;6090:51;6173:2;6158:18;;5837:345::o;7393:128::-;7433:3;7464:1;7460:6;7457:1;7454:13;7451:39;;;7470:18;;:::i;:::-;-1:-1:-1;7506:9:1;;7393:128::o;7526:125::-;7566:4;7594:1;7591;7588:8;7585:34;;;7599:18;;:::i;:::-;-1:-1:-1;7636:9:1;;7526:125::o;7656:380::-;7735:1;7731:12;;;;7778;;;7799:61;;7853:4;7845:6;7841:17;7831:27;;7799:61;7906:2;7898:6;7895:14;7875:18;7872:38;7869:161;;;7952:10;7947:3;7943:20;7940:1;7933:31;7987:4;7984:1;7977:15;8015:4;8012:1;8005:15;7869:161;;7656:380;;;:::o;8041:127::-;8102:10;8097:3;8093:20;8090:1;8083:31;8133:4;8130:1;8123:15;8157:4;8154:1;8147:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "844400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Contractowner()": "2469",
								"DoplymentFee()": "2384",
								"_burn(address,uint256)": "infinite",
								"_decimals()": "2358",
								"_mintSupply(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24643",
								"balanceOf(address)": "2673",
								"burnContract()": "infinite",
								"contractType()": "infinite",
								"decimals()": "2319",
								"decreaseAllowance(address,uint256)": "infinite",
								"doubleContract()": "infinite",
								"feeCollector()": "2359",
								"increaseAllowance(address,uint256)": "27078",
								"mintContract()": "infinite",
								"name()": "infinite",
								"renounceOwnership()": "26537",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "26821"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1B5A5B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12617,
									"end": 12650,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313AB937"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12653,
									"end": 12686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "646F75626C65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12979,
									"end": 12992,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12966,
									"end": 12975,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12966,
									"end": 12992,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12966,
									"end": 12992,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2444,
									"end": 2446,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2447,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2485,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 2463,
									"end": 2481,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2463,
									"end": 2481,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2463,
									"end": 2481,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2456,
									"end": 2486,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6E6F7420656E6F75676820666565"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "90"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2502,
									"end": 2520,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2502,
									"end": 2520,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2520,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12957,
									"end": 13010,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13022,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13017,
									"end": 13022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13017,
									"end": 13029,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13043,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13036,
									"end": 13043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13036,
									"end": 13052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13060,
									"end": 13069,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13086,
									"end": 13099,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13100,
									"end": 13110,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13086,
									"end": 13110,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13148,
									"end": 13150,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 13148,
									"end": 13161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13132,
									"end": 13146,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13132,
									"end": 13161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13129,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13117,
									"end": 13161,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13184,
									"end": 13196,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13184,
									"end": 13210,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13184,
									"end": 13210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13184,
									"end": 13210,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13229,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13217,
									"end": 13243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13262,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 13250,
									"end": 13262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13250,
									"end": 13276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13307,
									"end": 13319,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13307,
									"end": 13319,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13293,
									"end": 13303,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13304,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13319,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13319,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13325,
									"end": 13347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13348,
									"end": 13357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "PUSH",
									"source": 0,
									"value": "8FC"
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13348,
									"end": 13357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13348,
									"end": 13357,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13283,
									"end": 13292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13348,
									"end": 13357,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13347,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 13325,
									"end": 13358,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13403,
									"end": 13415,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13403,
									"end": 13415,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2731,
									"end": 2756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2756,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2756,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13391,
									"end": 13401,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 13391,
									"end": 13401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13387,
									"end": 13388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13387,
									"end": 13388,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2719,
									"end": 2721,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2704,
									"end": 2722,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13370,
									"end": 13416,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12766,
									"end": 13424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 199,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 14,
									"end": 199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 101,
									"end": 114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 101,
									"end": 114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 143,
									"end": 174,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 174,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 133,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 133,
									"end": 175,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 189,
									"end": 190,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 187,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 179,
									"end": 191,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 193,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 199,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 1089,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 204,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 258,
									"end": 263,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 314,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 304,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 296,
									"end": 302,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 292,
									"end": 309,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 288,
									"end": 315,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 278,
									"end": 333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 278,
									"end": 333,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 329,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 319,
									"end": 331,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 278,
									"end": 333,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 278,
									"end": 333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 352,
									"end": 365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 352,
									"end": 365,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 424,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 414,
									"end": 424,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 414,
									"end": 424,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 411,
									"end": 447,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 411,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 411,
									"end": 447,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 427,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 427,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 427,
									"end": 445,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 427,
									"end": 445,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 427,
									"end": 445,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 502,
									"end": 504,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 505,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 556,
									"end": 569,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 556,
									"end": 569,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 576,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 548,
									"end": 579,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 584,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 532,
									"end": 585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 532,
									"end": 585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 532,
									"end": 585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 597,
									"end": 643,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 594,
									"end": 666,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 594,
									"end": 666,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 594,
									"end": 666,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 646,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 646,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 646,
									"end": 664,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 646,
									"end": 664,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 646,
									"end": 664,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 686,
									"end": 696,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 682,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 697,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 721,
									"end": 723,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 713,
									"end": 719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 706,
									"end": 724,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 743,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 747,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 733,
									"end": 747,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 788,
									"end": 791,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 778,
									"end": 780,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 766,
									"end": 781,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 762,
									"end": 786,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 792,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 756,
									"end": 809,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 756,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 756,
									"end": 809,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 805,
									"end": 806,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 802,
									"end": 803,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 795,
									"end": 807,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 756,
									"end": 809,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 756,
									"end": 809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 818,
									"end": 828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 837,
									"end": 970,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 837,
									"end": 970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 851,
									"end": 853,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 848,
									"end": 849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 854,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 837,
									"end": 970,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 837,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 837,
									"end": 970,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 939,
									"end": 953,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 939,
									"end": 953,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 939,
									"end": 953,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 935,
									"end": 958,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 935,
									"end": 958,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 908,
									"end": 922,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 904,
									"end": 927,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 904,
									"end": 927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 897,
									"end": 960,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 862,
									"end": 872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 862,
									"end": 872,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 862,
									"end": 872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 862,
									"end": 872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 837,
									"end": 970,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 837,
									"end": 970,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 837,
									"end": 970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 990,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 985,
									"end": 986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 982,
									"end": 991,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1059,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 1059,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1042,
									"end": 1044,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1039,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1029,
									"end": 1035,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1049,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1059,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1083,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 204,
									"end": 1089,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 1089,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1262,
									"end": 1268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1270,
									"end": 1276,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1278,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1300,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1343,
									"end": 1352,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1341,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1330,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1359,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1376,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1323,
									"end": 1376,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1376,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1323,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1415,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1415,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1464,
									"end": 1478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1478,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1478,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1495,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1461,
									"end": 1495,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1489,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1493,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1495,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1461,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1514,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1567,
									"end": 1574,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1564,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1547,
									"end": 1556,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1514,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1514,
									"end": 1575,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1514,
									"end": 1575,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1514,
									"end": 1575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1575,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1575,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1621,
									"end": 1623,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1606,
									"end": 1624,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1625,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1625,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1652,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1640,
									"end": 1648,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1670,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1634,
									"end": 1670,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1666,
									"end": 1667,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1663,
									"end": 1664,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1668,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1634,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1744,
									"end": 1751,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1741,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1731,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 1718,
									"end": 1742,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1689,
									"end": 1752,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1689,
									"end": 1752,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1689,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1752,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1781,
									"end": 1790,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1796,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1796,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1839,
									"end": 1841,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1828,
									"end": 1837,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1824,
									"end": 1842,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1843,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1805,
									"end": 1843,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1805,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1876,
									"end": 1881,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1888,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1870,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1852,
									"end": 1907,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 1901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1893,
									"end": 1905,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1907,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1852,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1931,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1916,
									"end": 1931,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1916,
									"end": 1931,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1974,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1960,
									"end": 1969,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1956,
									"end": 1975,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1940,
									"end": 1976,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1940,
									"end": 1976,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2048,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2037,
									"end": 2046,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1995,
									"end": 2053,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1995,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1995,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2053,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2099,
									"end": 2102,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2088,
									"end": 2097,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2084,
									"end": 2103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2104,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2119,
									"end": 2127,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2116,
									"end": 2132,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2142,
									"end": 2143,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2135,
									"end": 2147,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2149,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2168,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2223,
									"end": 2230,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2212,
									"end": 2220,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2201,
									"end": 2210,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2221,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2168,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2168,
									"end": 2231,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2168,
									"end": 2231,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2168,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2231,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2231,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2231,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 2237,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2857,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2899,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2857,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 2941,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2932,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2942,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2993,
									"end": 2997,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2989,
									"end": 2990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 2998,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 2979,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2972,
									"end": 2999,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2969,
									"end": 3022,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2969,
									"end": 3022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2969,
									"end": 3022,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3002,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3002,
									"end": 3020,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3002,
									"end": 3020,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3002,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3059,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3042,
									"end": 3050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3060,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3090,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3035,
									"end": 3090,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3088,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3088,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3088,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3088,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3090,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3035,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3111,
									"end": 3126,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3111,
									"end": 3126,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3111,
									"end": 3126,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3111,
									"end": 3126,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2913,
									"end": 3183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2917,
									"end": 2920,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 3189,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3194,
									"end": 3334,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 3194,
									"end": 3334,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3252,
									"end": 3257,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3281,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3322,
									"end": 3326,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3312,
									"end": 3320,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3308,
									"end": 3327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3302,
									"end": 3306,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3281,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3281,
									"end": 3328,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3281,
									"end": 3328,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3281,
									"end": 3328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3272,
									"end": 3328,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3194,
									"end": 3334,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3194,
									"end": 3334,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3418,
									"end": 3426,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3408,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3408,
									"end": 3488,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3460,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3408,
									"end": 3488,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3408,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3511,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3497,
									"end": 3573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3544,
									"end": 3545,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3558,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3558,
									"end": 3563,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3573,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3497,
									"end": 3573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3589,
									"end": 3593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3607,
									"end": 3608,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3675,
									"end": 3676,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3582,
									"end": 3800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3582,
									"end": 3800,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3602,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3633,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3623,
									"end": 3633,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3623,
									"end": 3633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3651,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3646,
									"end": 3651,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3670,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3707,
									"end": 3710,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3697,
									"end": 3705,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3694,
									"end": 3711,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3691,
									"end": 3734,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3691,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3691,
									"end": 3734,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3714,
									"end": 3732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3714,
									"end": 3732,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3714,
									"end": 3732,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3714,
									"end": 3732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3756,
									"end": 3772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3756,
									"end": 3772,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3785,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3785,
									"end": 3790,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3582,
									"end": 3800,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3582,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3582,
									"end": 3800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3884,
									"end": 3886,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3874,
									"end": 3882,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3871,
									"end": 3887,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3865,
									"end": 3868,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3859,
									"end": 3863,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3869,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3888,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3846,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 3836,
									"end": 3844,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 3849,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3828,
									"end": 3830,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3822,
									"end": 3826,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3819,
									"end": 3831,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3815,
									"end": 3850,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3812,
									"end": 3889,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3968,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3809,
									"end": 3968,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3953,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3953,
									"end": 3958,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3968,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3809,
									"end": 3968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4025,
									"end": 4033,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4019,
									"end": 4023,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 4000,
									"end": 4034,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4000,
									"end": 4034,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4000,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4070,
									"end": 4076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4066,
									"end": 4067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4062,
									"end": 4068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4077,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4049,
									"end": 4056,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4046,
									"end": 4078,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4043,
									"end": 4101,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4043,
									"end": 4101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4043,
									"end": 4101,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4119,
									"end": 4139,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4119,
									"end": 4139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3339,
									"end": 4145,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4150,
									"end": 4318,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4150,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4190,
									"end": 4197,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4256,
									"end": 4257,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4252,
									"end": 4253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4248,
									"end": 4254,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4244,
									"end": 4258,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4242,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4238,
									"end": 4259,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4233,
									"end": 4234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4235,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4219,
									"end": 4236,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4215,
									"end": 4260,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4212,
									"end": 4283,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4212,
									"end": 4283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4212,
									"end": 4283,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4303,
									"end": 4312,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4318,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4402,
									"end": 4403,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4398,
									"end": 4410,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4398,
									"end": 4410,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4398,
									"end": 4410,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4398,
									"end": 4410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4445,
									"end": 4457,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4445,
									"end": 4457,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4445,
									"end": 4457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4466,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4466,
									"end": 4527,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4520,
									"end": 4524,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4512,
									"end": 4518,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4508,
									"end": 4525,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4498,
									"end": 4525,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4498,
									"end": 4525,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4466,
									"end": 4527,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4466,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4573,
									"end": 4575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4565,
									"end": 4571,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4562,
									"end": 4576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4539,
									"end": 4577,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 4614,
									"end": 4617,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 4610,
									"end": 4630,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4607,
									"end": 4608,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4600,
									"end": 4631,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4654,
									"end": 4658,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4651,
									"end": 4652,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4644,
									"end": 4659,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4682,
									"end": 4686,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4672,
									"end": 4687,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 4697,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4703,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4708,
									"end": 4835,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4708,
									"end": 4835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4769,
									"end": 4779,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 4760,
									"end": 4780,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4757,
									"end": 4758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4750,
									"end": 4781,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4800,
									"end": 4804,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4797,
									"end": 4798,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4790,
									"end": 4805,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4824,
									"end": 4828,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4821,
									"end": 4822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4829,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4840,
									"end": 4967,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4840,
									"end": 4967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4901,
									"end": 4911,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 4896,
									"end": 4899,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 4892,
									"end": 4912,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4889,
									"end": 4890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4882,
									"end": 4913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4932,
									"end": 4936,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4929,
									"end": 4930,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4922,
									"end": 4937,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4956,
									"end": 4960,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4953,
									"end": 4954,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 4961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4840,
									"end": 4967,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 4840,
									"end": 4967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12169,
									"end": 17663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203847d039c92c57ffd20acec941db4382ac7e5f475b8d4b5125c0a07b0c794e9f64736f6c63430008070033",
									".code": [
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "C415B95C"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "C415B95C"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "CB2EF6F7"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "D0B6B6DB"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "FE71264E"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "91FF41FF"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "9C38D8EB"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "4FB1C53C"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "6161EB18"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "1C0973A4"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 17663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2552,
											"end": 2739,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15150,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15150,
											"end": 15162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15074,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6896,
											"end": 7073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14854,
											"end": 14863,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14854,
											"end": 14863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14854,
											"end": 14863,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14854,
											"end": 14863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7238,
											"end": 7255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14781,
											"end": 14869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7078,
											"end": 7262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15289,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12584,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2344,
											"end": 2547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15601,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15038,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15054,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15065,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15684,
											"end": 15688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15697,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15697,
											"end": 15736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15697,
											"end": 15736,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15697,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15750,
											"end": 15754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12686,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15868,
											"end": 15872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 15996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15890,
											"end": 15896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15950,
											"end": 15956,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH data",
											"source": 0,
											"value": "38E0D8978FD41E2442BA5103603F98F09A924E14179783817FCA2BD5FCB14B5D"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15912,
											"end": 15995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 15889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15881,
											"end": 15996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15881,
											"end": 15996,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15881,
											"end": 15996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16003,
											"end": 16039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16013,
											"end": 16019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16021,
											"end": 16030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16003,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16003,
											"end": 16039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16003,
											"end": 16039,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16003,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 16069,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16077,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16227,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16170,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16170,
											"end": 16253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16202,
											"end": 16252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16241,
											"end": 16251,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16202,
											"end": 16252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14157,
											"end": 14169,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14201,
											"end": 14215,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14184,
											"end": 14216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14174,
											"end": 14262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14085,
											"end": 14262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3589,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3CB7BA903234B23713BA1031B437B7B9B290313AB937"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 14077,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14304,
											"end": 14325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6743,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6784,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "6275726E2066726F6D20746865207A65726F2061646472657373000000000000"
										},
										{
											"begin": 6801,
											"end": 6819,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6801,
											"end": 6819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6541,
											"end": 6891,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14296,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "3A206275726E20616D6F756E7420657863656564732062616C616E6365000000"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14384,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14447,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14469,
											"end": 14493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14486,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14469,
											"end": 14493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14469,
											"end": 14493,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14469,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14454,
											"end": 14493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14531,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7030,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14505,
											"end": 14542,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14548,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17577,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17624,
											"end": 17637,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17624,
											"end": 17650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17624,
											"end": 17650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17624,
											"end": 17650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17624,
											"end": 17650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17624,
											"end": 17650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17656,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12689,
											"end": 12726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14877,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14956,
											"end": 14963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14949,
											"end": 14963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13434,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13582,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13549,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13520,
											"end": 13550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13684,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13655,
											"end": 13685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13625,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13510,
											"end": 13686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5712,
											"end": 5730,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5712,
											"end": 5730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5712,
											"end": 5730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D85B881B9BDD0818D85B1B081B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5491,
											"end": 5832,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 13502,
											"end": 13708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13723,
											"end": 13744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13723,
											"end": 13744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6430,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6494,
											"name": "PUSH",
											"source": 1,
											"value": "206D696E7420746F20746865207A65726F206164647265737300000000000000"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6187,
											"end": 6536,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 13715,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13801,
											"end": 13814,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13801,
											"end": 13814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13801,
											"end": 13814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 13799,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 13814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13781,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13861,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13861,
											"end": 13873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13861,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13861,
											"end": 13885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 13884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13861,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13861,
											"end": 13885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13861,
											"end": 13885,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13861,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13846,
											"end": 13885,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13913,
											"end": 13935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13943,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13943,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13955,
											"end": 13992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13955,
											"end": 13992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13955,
											"end": 13992,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13955,
											"end": 13992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13955,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6896,
											"end": 7073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16285,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16370,
											"end": 16374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16406,
											"end": 16413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16454,
											"end": 16469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "2064656372656173656420616C6C6F77616E63652062656C6F77207A65726F00"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3237,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16415,
											"end": 16505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15295,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15375,
											"end": 15379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15388,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15412,
											"end": 15421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15423,
											"end": 15429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15388,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15388,
											"end": 15430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12729,
											"end": 12755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12617,
											"end": 12650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17444,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17431,
											"end": 17444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17431,
											"end": 17444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17419,
											"end": 17429,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17419,
											"end": 17444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17411,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17503,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17510,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17071,
											"end": 17090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17071,
											"end": 17090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "PUSH",
											"source": 1,
											"value": "3A20617070726F76652066726F6D6D20746865207A65726F2061646472657373"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4772,
											"end": 5128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17063,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17142,
											"end": 17163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "3A20617070726F76656520746F20746865207A65726F20616464726573730000"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4053,
											"end": 4407,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17134,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17289,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17333,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16981,
											"end": 17339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4015,
											"end": 4193,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4015,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4193,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4015,
											"end": 4193,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16538,
											"end": 16969,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16538,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "207472616E736665722066726F6D20746865207A65726F206164647265737300"
										},
										{
											"begin": 4672,
											"end": 4690,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4672,
											"end": 4690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4412,
											"end": 4767,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16624,
											"end": 16688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16703,
											"end": 16726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16703,
											"end": 16726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "207472616E7366657220746F20746865207A65726F2061646472657373000000"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5133,
											"end": 5486,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16695,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "PUSH",
											"source": 0,
											"value": "207472616E7366657220616D6F756E7420657863656564732062616C616E6365"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 16817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 16817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16789,
											"end": 16810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 16789,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16854,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16854,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16854,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16884,
											"end": 16916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16884,
											"end": 16916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16884,
											"end": 16916,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16884,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16916,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16916,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16928,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6896,
											"end": 7073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3702,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 4007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3697,
											"end": 4048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3877,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3877,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3958,
											"end": 4001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1240,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1582,
											"end": 1643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1640,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1582,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1713,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1714,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1673,
											"end": 1838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1783,
											"end": 1798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1744,
											"end": 1747,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1838,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1673,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1847,
											"end": 2314,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 1938,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1939,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1881,
											"end": 1985,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 1994,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7347,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2103,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2295,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2314,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1847,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2330,
											"end": 2333,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2333,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 2339,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2744,
											"end": 3341,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2744,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2953,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3116,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3024,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3173,
											"end": 3264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3236,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3173,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3304,
											"end": 3319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3330,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3330,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3335,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 3341,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 3341,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5837,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6041,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3CB7BA9030B932903737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7393,
											"end": 7521,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7393,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7451,
											"end": 7490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7526,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7526,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7596,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7585,
											"end": 7619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7799,
											"end": 7860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7841,
											"end": 7858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7860,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7799,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7898,
											"end": 7904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7910,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7962,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7987,
											"end": 7991,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 8030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8036,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8041,
											"end": 8168,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8041,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8112,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8162,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"38E0D8978FD41E2442BA5103603F98F09A924E14179783817FCA2BD5FCB14B5D": "207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Contractowner()": "fe71264e",
							"DoplymentFee()": "4fb1c53c",
							"_burn(address,uint256)": "6161eb18",
							"_decimals()": "32424aa3",
							"_mintSupply(address,uint256)": "9c38d8eb",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnContract()": "1c0973a4",
							"contractType()": "cb2ef6f7",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"doubleContract()": "91ff41ff",
							"feeCollector()": "c415b95c",
							"increaseAllowance(address,uint256)": "39509351",
							"mintContract()": "d0b6b6db",
							"name()": "06fdde03",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_DoplymentFee\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractType\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Contractowner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DoplymentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_mintSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnContract\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doubleContract\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintContract\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"Q8ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 637,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 643,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 645,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 647,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 649,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 653,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "Contractowner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 655,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "DoplymentFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 657,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "feeCollector",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 660,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "mintContract",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 663,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "burnContract",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 666,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "doubleContract",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 668,
								"contract": "contracts/deployedOmar/omerFinalToken.sol:Q8ERC20Token",
								"label": "contractType",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/deployedOmar/omerFinalToken.sol\":3467:5396  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/deployedOmar/omerFinalToken.sol\":3467:5396  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1585d4c0207d662db451c0107acca0615ff84f46e5b9be6734f88d06737120064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1585d4c0207d662db451c0107acca0615ff84f46e5b9be6734f88d06737120064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL PC 0x5D 0x4C MUL SMOD 0xD6 PUSH3 0xDB451C ADD SMOD 0xAC 0xCA MOD ISZERO SELFDESTRUCT DUP5 DELEGATECALL PUSH15 0x5B9BE6734F88D06737120064736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "3467:1929:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3467:1929:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1585d4c0207d662db451c0107acca0615ff84f46e5b9be6734f88d06737120064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL PC 0x5D 0x4C MUL SMOD 0xD6 PUSH3 0xDB451C ADD SMOD 0xAC 0xCA MOD ISZERO SELFDESTRUCT DUP5 DELEGATECALL PUSH15 0x5B9BE6734F88D06737120064736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "3467:1929:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3467,
									"end": 5396,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1585d4c0207d662db451c0107acca0615ff84f46e5b9be6734f88d06737120064736f6c63430008070033",
									".code": [
										{
											"begin": 3467,
											"end": 5396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 5396,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deployedOmar/omerFinalToken.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployedOmar/omerFinalToken.sol\":{\"keccak256\":\"0xfacf0172064621104613e0f0d42ebf8347246779576d34c075a0f016eee6c466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa25f27578bb2b712984f32f1668fa3f814339a04bdccec7da72f9f755d0adb0\",\"dweb:/ipfs/QmdpNmdBz3kVC4sgdGfVv7TGuTgKwQgumuNkhK8eT4GiBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/deployedOmar/omerFinalToken.sol": {
				"ast": {
					"absolutePath": "contracts/deployedOmar/omerFinalToken.sol",
					"exportedSymbols": {
						"Address": [
							623
						],
						"Context": [
							122
						],
						"IERC20": [
							94
						],
						"Ownable": [
							424
						],
						"Q8ERC20Token": [
							1284
						],
						"SafeMath": [
							308
						]
					},
					"id": 1285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IERC20",
							"nameLocation": "73:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "85:64:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "162:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:9:0"
									},
									"scope": 94,
									"src": "153:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "214:49:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "310:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "310:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:7:0"
									},
									"scope": 94,
									"src": "267:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "323:47:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "383:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "415:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:0"
									},
									"scope": 94,
									"src": "374:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "436:43:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "492:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "522:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:15:0"
									},
									"scope": 94,
									"src": "483:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "567:70:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "650:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "700:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:9:0"
									},
									"scope": 94,
									"src": "641:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "715:203:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "931:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "948:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "940:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:35:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:6:0"
									},
									"scope": 94,
									"src": "922:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1005:258:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1276:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1294:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1286:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1310:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1302:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:33:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:9:0"
									},
									"scope": 94,
									"src": "1267:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1357:629:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1999:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2015:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2032:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2058:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:6:0"
									},
									"scope": 94,
									"src": "1990:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2070:288:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2371:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2408:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2400:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:51:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2453:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:6:0"
									},
									"scope": 94,
									"src": "2362:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2465:153:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 84,
									"name": "Transfer",
									"nameLocation": "2628:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2653:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2637:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2659:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2636:57:0"
									},
									"src": "2622:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2700:145:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 93,
									"name": "Approval",
									"nameLocation": "2855:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2880:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2864:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2903:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2887:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2912:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:63:0"
									},
									"src": "2849:78:0"
								}
							],
							"scope": 1285,
							"src": "63:2867:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "Context",
							"nameLocation": "2945:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3126:3:0",
										"statements": []
									},
									"id": 98,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3122:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3126:0:0"
									},
									"scope": 122,
									"src": "3110:19:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3197:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 105,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3220:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3220:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3211:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 103,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3211:9:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3211:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 102,
												"id": 108,
												"nodeType": "Return",
												"src": "3204:27:0"
											}
										]
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3144:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3154:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3180:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:17:0"
									},
									"scope": 122,
									"src": "3135:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3300:158:0",
										"statements": [
											{
												"expression": {
													"id": 115,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "3307:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$122",
														"typeString": "contract Context"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3307:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3444:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3444:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 114,
												"id": 119,
												"nodeType": "Return",
												"src": "3437:15:0"
											}
										]
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3252:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3286:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:14:0"
									},
									"scope": 122,
									"src": "3243:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1285,
							"src": "2936:525:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "SafeMath",
							"nameLocation": "3475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "3769:100:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3784:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 147,
														"src": "3776:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "3788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 135,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3788:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3776:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "3808:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 140,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "3813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3808:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3816:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3800:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "3800:46:0"
											},
											{
												"expression": {
													"id": 145,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "3862:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 146,
												"nodeType": "Return",
												"src": "3855:8:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3489:209:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "3711:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3734:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3726:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3714:22:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:9:0"
									},
									"scope": 308,
									"src": "3702:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3944:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "3962:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 159,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3965:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3968:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 157,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															191
														],
														"referencedDeclaration": 191,
														"src": "3958:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 162,
												"nodeType": "Return",
												"src": "3951:50:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3886:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3898:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3890:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3909:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3901:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:22:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3935:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:9:0"
									},
									"scope": 308,
									"src": "3877:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4110:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "4125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 177,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "4130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 179,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4133:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4117:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "4117:29:0"
											},
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4161:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "4153:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 187,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "4165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4153:17:0"
											},
											{
												"expression": {
													"id": 188,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "4186:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 174,
												"id": 189,
												"nodeType": "Return",
												"src": "4179:8:0"
											}
										]
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4024:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4036:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4028:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4047:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4064:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4050:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:50:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4101:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4100:9:0"
									},
									"scope": 308,
									"src": "4015:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "4268:364:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "4488:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4493:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4488:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 206,
												"nodeType": "IfStatement",
												"src": "4484:37:0",
												"trueBody": {
													"id": 205,
													"nodeType": "Block",
													"src": "4496:25:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4512:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 199,
															"id": 204,
															"nodeType": "Return",
															"src": "4505:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4537:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 224,
														"src": "4529:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "4541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4529:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "4561:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 215,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "4565:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4561:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 217,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "4570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4561:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4573:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4553:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "4553:56:0"
											},
											{
												"expression": {
													"id": 222,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "4625:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 223,
												"nodeType": "Return",
												"src": "4618:8:0"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "4210:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4222:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4214:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4233:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4225:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4213:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:9:0"
									},
									"scope": 308,
									"src": "4201:431:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4707:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4725:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 236,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4731:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 234,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241,
															268
														],
														"referencedDeclaration": 268,
														"src": "4721:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "4714:46:0"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4649:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4672:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4664:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4652:22:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:9:0"
									},
									"scope": 308,
									"src": "4640:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "4869:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 253,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "4947:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4951:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4939:28:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4982:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "4974:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 261,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "4986:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 262,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "4990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4986:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4974:17:0"
											},
											{
												"expression": {
													"id": 265,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 260,
													"src": "5090:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 266,
												"nodeType": "Return",
												"src": "5083:8:0"
											}
										]
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4783:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4795:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4787:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4806:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4798:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4823:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4809:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4809:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:50:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:9:0"
									},
									"scope": 308,
									"src": "4774:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "5172:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5190:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 279,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "5193:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5196:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 277,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															284,
															307
														],
														"referencedDeclaration": 307,
														"src": "5186:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5186:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 282,
												"nodeType": "Return",
												"src": "5179:44:0"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5114:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5126:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5118:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5137:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5129:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:22:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5163:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5162:9:0"
									},
									"scope": 308,
									"src": "5105:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5332:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "5347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5352:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5347:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 299,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "5355:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5339:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "5339:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "5386:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5382:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 305,
												"nodeType": "Return",
												"src": "5375:12:0"
											}
										]
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5246:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5269:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5286:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5272:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:50:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5323:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:9:0"
									},
									"scope": 308,
									"src": "5237:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1285,
							"src": "3467:1929:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 309,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 122,
										"src": "5422:7:0"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "5422:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424,
								122
							],
							"name": "Ownable",
							"nameLocation": "5411:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 312,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "5451:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "5435:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 311,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5435:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 318,
									"name": "OwnershipTransferred",
									"nameLocation": "5470:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "5507:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5491:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5538:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5522:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5490:57:0"
									},
									"src": "5464:84:0"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "5663:125:0",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "5678:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "5670:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5670:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "5690:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5670:32:0"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "5709:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5718:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5709:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5709:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5760:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5760:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5739:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5739:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "5734:48:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5554:89:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 340,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5659:2:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5663:0:0"
									},
									"scope": 424,
									"src": "5647:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "5908:26:0",
										"statements": [
											{
												"expression": {
													"id": 346,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "5922:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 345,
												"id": 347,
												"nodeType": "Return",
												"src": "5915:13:0"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "5794:63:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "5870:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5875:2:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5898:9:0"
									},
									"scope": 424,
									"src": "5861:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "6040:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 353,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "6055:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 354,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "6065:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6065:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6055:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6079:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6047:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "6047:67:0"
											},
											{
												"id": 360,
												"nodeType": "PlaceholderStatement",
												"src": "6121:1:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5940:75:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 362,
									"name": "onlyOwner",
									"nameLocation": "6028:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6037:2:0"
									},
									"src": "6019:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "6509:84:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 369,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 368,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6521:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6521:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "EmitStatement",
												"src": "6516:45:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "6568:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6585:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 377,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6577:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6577:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6568:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6568:19:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "6134:325:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 365,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "6499:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6499:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6472:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6489:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6509:0:0"
									},
									"scope": 424,
									"src": "6463:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "6800:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6826:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 392,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "6807:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "6807:28:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "6599:135:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 390,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 389,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "6790:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6790:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6747:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6773:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "6765:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:18:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6800:0:0"
									},
									"scope": 424,
									"src": "6738:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "6994:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "7009:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7029:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7021:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7021:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7021:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7009:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7033:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7001:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "7001:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 414,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "7107:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 413,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "7086:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "EmitStatement",
												"src": "7081:43:0"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "7131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 419,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "7140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "7131:17:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "6847:88:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6948:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6975:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6967:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6966:18:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6994:0:0"
									},
									"scope": 424,
									"src": "6939:215:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1285,
							"src": "5402:1755:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "Address",
							"nameLocation": "7167:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7250:588:0",
										"statements": [
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "7514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "7506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 431,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"nodeType": "VariableDeclarationStatement",
												"src": "7506:16:0"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "7541:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "7533:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 434,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7568:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7533:101:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7711:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7726:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "7750:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "7738:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "7726:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 426,
														"isOffset": false,
														"isSlot": false,
														"src": "7750:7:0",
														"valueSize": 1
													},
													{
														"declaration": 432,
														"isOffset": false,
														"isSlot": false,
														"src": "7726:8:0",
														"valueSize": 1
													}
												],
												"id": 438,
												"nodeType": "InlineAssembly",
												"src": "7702:67:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 439,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "7787:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 440,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "7799:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "7787:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "7814:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7826:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "7814:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7787:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 446,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7786:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 430,
												"id": 447,
												"nodeType": "Return",
												"src": "7779:51:0"
											}
										]
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "7193:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7203:17:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7244:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7243:6:0"
									},
									"scope": 623,
									"src": "7184:654:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "7917:398:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 459,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7958:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$623",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$623",
																				"typeString": "library Address"
																			}
																		],
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7950:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 457,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7950:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7950:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7950:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 462,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7975:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7950:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7996:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7928:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "7928:110:0"
											},
											{
												"assignments": [
													468,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8135:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "8130:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 467,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8130:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8178:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 469,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "8148:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8148:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 471,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "8170:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8148:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8129:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "8214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8236:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8192:115:0"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "7855:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7881:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "7865:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7865:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "7892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7864:43:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7917:0:0"
									},
									"scope": 623,
									"src": "7846:469:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "9188:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "9219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "9227:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9233:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 492,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															499,
															519
														],
														"referencedDeclaration": 519,
														"src": "9206:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 491,
												"id": 497,
												"nodeType": "Return",
												"src": "9199:67:0"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "8323:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9085:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9106:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "9098:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "9114:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9114:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9097:35:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "9169:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9169:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9168:14:0"
									},
									"scope": 623,
									"src": "9076:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "9655:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "9696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "9704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9710:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "9713:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 511,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "9673:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9673:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 510,
												"id": 517,
												"nodeType": "Return",
												"src": "9666:60:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "9282:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9513:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9536:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9561:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9561:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9603:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9589:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9525:97:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9641:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9641:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9640:14:0"
									},
									"scope": 623,
									"src": "9504:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "10256:209:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 534,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "10375:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10399:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 531,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															539,
															572
														],
														"referencedDeclaration": 572,
														"src": "10287:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10287:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 530,
												"id": 537,
												"nodeType": "Return",
												"src": "10267:190:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "9742:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10118:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10175:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10139:84:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10242:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10241:14:0"
									},
									"scope": 623,
									"src": "10109:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "10907:212:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 556,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10948:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$623",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$623",
																				"typeString": "library Address"
																			}
																		],
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 554,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10940:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10940:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10940:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 559,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "10965:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10940:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10985:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "10918:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "11077:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "11085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "11091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 568,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "11098:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 564,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "11054:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11054:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 552,
												"id": 570,
												"nodeType": "Return",
												"src": "11047:64:0"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "10475:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10732:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "10764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "10789:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10789:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10825:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "10817:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "10841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10753:121:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "10893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10892:14:0"
									},
									"scope": 623,
									"src": "10723:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "11314:846:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 587,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "11344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 586,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "11333:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11333:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11353:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11325:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "11325:60:0"
											},
											{
												"assignments": [
													593,
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11464:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "11459:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 592,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11459:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11486:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "11473:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 594,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"id": 600,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "11542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 596,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "11513:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11513:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 598,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "11532:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11513:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11458:89:0"
											},
											{
												"condition": {
													"id": 603,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "11562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "11621:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 607,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "11707:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11707:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11727:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11707:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "12087:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 580,
																					"src": "12113:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 613,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "12106:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12106:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "ExpressionStatement",
																		"src": "12106:20:0"
																	}
																]
															},
															"id": 618,
															"nodeType": "IfStatement",
															"src": "11703:439:0",
															"trueBody": {
																"id": 612,
																"nodeType": "Block",
																"src": "11730:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11918:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11941:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11970:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11964:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11964:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11945:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12014:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "12018:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12010:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12010:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "12031:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12003:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12003:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12003:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 595,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11970:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 595,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12018:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 611,
																		"nodeType": "InlineAssembly",
																		"src": "11909:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 620,
												"nodeType": "IfStatement",
												"src": "11558:595:0",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "11571:44:0",
													"statements": [
														{
															"expression": {
																"id": 604,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "11593:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 584,
															"id": 605,
															"nodeType": "Return",
															"src": "11586:17:0"
														}
													]
												}
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "11136:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11177:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "11169:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "11194:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "11230:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "11222:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11263:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "11249:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11249:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11158:124:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "11300:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11299:14:0"
									},
									"scope": 623,
									"src": "11127:1033:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1285,
							"src": "7159:5004:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 624,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 122,
										"src": "12194:7:0"
									},
									"id": 625,
									"nodeType": "InheritanceSpecifier",
									"src": "12194:7:0"
								},
								{
									"baseName": {
										"id": 626,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 94,
										"src": "12203:6:0"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "12203:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1284,
							"linearizedBaseContracts": [
								1284,
								94,
								122
							],
							"name": "Q8ERC20Token",
							"nameLocation": "12178:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 630,
									"libraryName": {
										"id": 628,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "12221:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "12215:26:0",
									"typeName": {
										"id": 629,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12233:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 633,
									"libraryName": {
										"id": 631,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 308,
										"src": "12251:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "12245:27:0",
									"typeName": {
										"id": 632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12264:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12313:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12276:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 636,
										"keyType": {
											"id": 634,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12285:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12276:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 635,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12296:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 643,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12387:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12329:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 642,
										"keyType": {
											"id": 638,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12338:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12329:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 641,
											"keyType": {
												"id": 639,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12358:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12349:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 640,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12369:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 645,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12421:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12405:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12405:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 647,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "12451:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12438:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 646,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "12438:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 649,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12481:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12465:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 648,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12465:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 651,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12508:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12493:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 650,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12493:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fe71264e",
									"id": 653,
									"mutability": "mutable",
									"name": "Contractowner",
									"nameLocation": "12533:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12518:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 652,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12518:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb1c53c",
									"id": 655,
									"mutability": "mutable",
									"name": "DoplymentFee",
									"nameLocation": "12567:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12551:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12551:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c415b95c",
									"id": 657,
									"mutability": "mutable",
									"name": "feeCollector",
									"nameLocation": "12600:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12584:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 656,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12584:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0b6b6db",
									"id": 660,
									"mutability": "mutable",
									"name": "mintContract",
									"nameLocation": "12631:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12617:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 658,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12617:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "6d696e74",
										"id": 659,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12644:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
											"typeString": "literal_string \"mint\""
										},
										"value": "mint"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c0973a4",
									"id": 663,
									"mutability": "mutable",
									"name": "burnContract",
									"nameLocation": "12667:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12653:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 661,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12653:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "6275726e",
										"id": 662,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12680:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f43e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1",
											"typeString": "literal_string \"burn\""
										},
										"value": "burn"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91ff41ff",
									"id": 666,
									"mutability": "mutable",
									"name": "doubleContract",
									"nameLocation": "12703:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12689:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 664,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12689:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "646f75626c65",
										"id": 665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12718:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e13b17b1761f5c44496ba445bbd6344f0ca0b2246ea2b55bf678f67ce54028be",
											"typeString": "literal_string \"double\""
										},
										"value": "double"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb2ef6f7",
									"id": 668,
									"mutability": "mutable",
									"name": "contractType",
									"nameLocation": "12743:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1284,
									"src": "12729:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 667,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12729:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "12950:474:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 686,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12966:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12966:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 688,
																"name": "_DoplymentFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "12979:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12966:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f75676820666565",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12993:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c699404fc26f31dbf70ed0f76e6d5bb44015d35ed52b37438f39fb84042242c1",
																"typeString": "literal_string \"not enough fee\""
															},
															"value": "not enough fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c699404fc26f31dbf70ed0f76e6d5bb44015d35ed52b37438f39fb84042242c1",
																"typeString": "literal_string \"not enough fee\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12957:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12957:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "12957:53:0"
											},
											{
												"expression": {
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 693,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 694,
														"name": "Name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "13025:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13017:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "13017:12:0"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 697,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "13036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 698,
														"name": "Symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "13046:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13036:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "13036:16:0"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 701,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "13060:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 702,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "13072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "13060:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "13060:19:0"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 705,
														"name": "Contractowner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "13086:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 706,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13100:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13100:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13086:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "13086:24:0"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "13117:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 711,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "13132:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13148:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 713,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "13152:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13148:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13132:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13117:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "13117:44:0"
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 718,
														"name": "DoplymentFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "13184:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 719,
														"name": "_DoplymentFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "13197:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13184:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "13184:26:0"
											},
											{
												"expression": {
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 722,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "13217:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 723,
														"name": "_feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "13230:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13217:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "13217:26:0"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "contractType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "13250:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 727,
														"name": "_contractType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "13263:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13250:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "13250:26:0"
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "13283:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 733,
														"indexExpression": {
															"expression": {
																"id": 731,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13293:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13293:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13283:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 734,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "13307:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13283:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "13283:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13348:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "13348:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 737,
															"name": "_feeCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "13325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "13325:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13325:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "13325:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 745,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13379:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13379:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13391:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13391:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "13403:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 744,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "13370:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13370:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "13365:51:0"
											}
										]
									},
									"id": 755,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "Name",
												"nameLocation": "12792:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12778:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12778:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "Symbol",
												"nameLocation": "12811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12797:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "12827:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12819:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "12848:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 675,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "_DoplymentFee",
												"nameLocation": "12865:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12857:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "12896:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12879:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12879:16:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "_contractType",
												"nameLocation": "12924:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "12910:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12777:163:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12950:0:0"
									},
									"scope": 1284,
									"src": "12766:658:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "13495:503:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 766,
																					"name": "mintContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "13537:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 764,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "13520:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "13520:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13520:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 763,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "13510:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13510:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 772,
																					"name": "contractType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "13582:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 770,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "13565:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "13565:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13565:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 769,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "13555:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13555:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "13510:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 779,
																					"name": "doubleContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "13625:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 777,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "13608:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "13608:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13608:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 776,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "13598:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13598:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 785,
																					"name": "contractType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "13672:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 783,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "13655:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "13655:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13655:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 782,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "13645:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13645:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "13598:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13510:176:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e206e6f742063616c6c206d696e74",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13688:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7eab23e330332fdb5abf41c1091a869894ff09afcdd5179be65fda7bbf8e840a",
																"typeString": "literal_string \"can not call mint\""
															},
															"value": "can not call mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7eab23e330332fdb5abf41c1091a869894ff09afcdd5179be65fda7bbf8e840a",
																"typeString": "literal_string \"can not call mint\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13502:206:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "13502:206:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 794,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "13723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 795,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13734:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13734:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13723:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13746:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															},
															"value": " mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															}
														],
														"id": 793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13715:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "13715:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 804,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13789:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13789:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 806,
																"name": "Contractowner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "13801:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13789:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420746865206f776e6572",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13815:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															},
															"value": "you are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13781:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "13781:58:0"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "13846:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "13878:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 812,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "13861:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "13861:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13861:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13846:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "13846:39:0"
											},
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 818,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "13892:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 820,
														"indexExpression": {
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "13902:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13892:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 825,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "13936:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 821,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "13913:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 823,
																"indexExpression": {
																	"id": 822,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "13923:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13913:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "13913:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13913:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13892:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "13892:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13972:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13964:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13964:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13964:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "13976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "13985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "13955:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13955:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "EmitStatement",
												"src": "13950:42:0"
											}
										]
									},
									"functionSelector": "9c38d8eb",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintSupply",
									"nameLocation": "13443:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "13455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "13472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13454:33:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13495:0:0"
									},
									"scope": 1284,
									"src": "13434:564:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "14070:478:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 850,
																					"name": "burnContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "14112:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 848,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "14095:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "14095:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14095:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 847,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "14085:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14085:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 856,
																					"name": "contractType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "14157:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 854,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "14140:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "14140:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14140:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 853,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "14130:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14130:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "14085:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 863,
																					"name": "doubleContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "14201:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 861,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "14184:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "14184:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14184:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 860,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "14174:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14174:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 869,
																					"name": "contractType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "14248:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 867,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "14231:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "14231:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14231:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 866,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "14221:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14221:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "14174:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14085:177:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206469646e27742063686f6f7365206275726e",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14264:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f6adc598200bbf34e9424f27327b7529228e6889a1c2885ba3783a4ff5a5b7b",
																"typeString": "literal_string \"you didn't choose burn\""
															},
															"value": "you didn't choose burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f6adc598200bbf34e9424f27327b7529228e6889a1c2885ba3783a4ff5a5b7b",
																"typeString": "literal_string \"you didn't choose burn\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14077:212:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "14077:212:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "14304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14323:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 879,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14315:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14315:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14304:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14327:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddc3bbe3c2124b6ca322351f7476ba90eb2af82a753bb21b582bcf89625febd1",
																"typeString": "literal_string \"burn from the zero address\""
															},
															"value": "burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddc3bbe3c2124b6ca322351f7476ba90eb2af82a753bb21b582bcf89625febd1",
																"typeString": "literal_string \"burn from the zero address\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14296:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "14296:60:0"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "14363:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 889,
														"indexExpression": {
															"id": 888,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "14373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14363:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 894,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "14407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14415:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_50320399ca1b739a89cbab4324ebc30440112288f68be53732083c99764f3a5d",
																	"typeString": "literal_string \": burn amount exceeds balance\""
																},
																"value": ": burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_50320399ca1b739a89cbab4324ebc30440112288f68be53732083c99764f3a5d",
																	"typeString": "literal_string \": burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 890,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "14384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 892,
																"indexExpression": {
																	"id": 891,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "14394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14384:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "14384:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14384:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14363:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "14363:84:0"
											},
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "14454:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 902,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "14486:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 900,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "14469:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 164,
															"src": "14469:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14469:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14454:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "14454:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 907,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "14514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 908,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14523:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14523:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "14535:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "14505:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "14500:42:0"
											}
										]
									},
									"functionSelector": "6161eb18",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14024:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14038:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "14030:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "14047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14029:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14070:0:0"
									},
									"scope": 1284,
									"src": "14015:533:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "14615:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "14628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "14637:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "14622:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14622:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "14622:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "14660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 930,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "14669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14669:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 939,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "14722:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14730:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6d9f9c771bc46f76c1d106a7bd4332a1d9b36a647536555e87e40b099400f312",
																		"typeString": "literal_string \": burn amount exceeds allowance\""
																	},
																	"value": ": burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_6d9f9c771bc46f76c1d106a7bd4332a1d9b36a647536555e87e40b099400f312",
																		"typeString": "literal_string \": burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 932,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "14683:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 934,
																		"indexExpression": {
																			"id": 933,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 918,
																			"src": "14695:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14683:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 937,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 935,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "14704:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14704:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14683:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 191,
																"src": "14683:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14683:81:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "14651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14651:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "14651:114:0"
											}
										]
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "14563:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "14573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14598:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "14590:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14572:33:0"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14615:0:0"
									},
									"scope": 1284,
									"src": "14554:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "14840:29:0",
										"statements": [
											{
												"expression": {
													"id": 951,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 647,
													"src": "14854:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 950,
												"id": 952,
												"nodeType": "Return",
												"src": "14847:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14790:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 947,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14810:8:0"
									},
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14798:2:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "14833:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14833:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14832:7:0"
									},
									"scope": 1284,
									"src": "14781:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "14942:27:0",
										"statements": [
											{
												"expression": {
													"id": 960,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 649,
													"src": "14956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 959,
												"id": 961,
												"nodeType": "Return",
												"src": "14949:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "14886:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14904:8:0"
									},
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14892:2:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "14927:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14926:15:0"
									},
									"scope": 1284,
									"src": "14877:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "15040:25:0",
										"statements": [
											{
												"expression": {
													"id": 969,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 651,
													"src": "15054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 968,
												"id": 970,
												"nodeType": "Return",
												"src": "15047:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "14986:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15002:8:0"
									},
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14990:2:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "15025:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15025:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15024:15:0"
									},
									"scope": 1284,
									"src": "14977:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "15136:32:0",
										"statements": [
											{
												"expression": {
													"id": 978,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "15150:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 977,
												"id": 979,
												"nodeType": "Return",
												"src": "15143:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "15083:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 974,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15104:8:0"
									},
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15094:2:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "15127:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15126:9:0"
									},
									"scope": 1284,
									"src": "15074:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										33
									],
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "15251:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 989,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "15265:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 991,
													"indexExpression": {
														"id": 990,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15265:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 992,
												"nodeType": "Return",
												"src": "15258:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "15185:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 985,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15219:8:0"
									},
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "15195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15194:17:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "15242:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15241:9:0"
									},
									"scope": 1284,
									"src": "15176:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "15381:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1005,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15398:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15398:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1007,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "15412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "15423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "15388:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15388:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "15388:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1003,
												"id": 1012,
												"nodeType": "Return",
												"src": "15437:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "15304:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1000,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15357:8:0"
									},
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15321:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15313:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15332:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15312:35:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15374:6:0"
									},
									"scope": 1284,
									"src": "15295:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "15554:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1024,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15568:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1026,
														"indexExpression": {
															"id": 1025,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "15580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15568:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1028,
													"indexExpression": {
														"id": 1027,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "15587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15568:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1029,
												"nodeType": "Return",
												"src": "15561:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "15471:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1020,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15522:8:0"
									},
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15489:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "15481:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15504:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "15496:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15480:32:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "15545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15544:9:0"
									},
									"scope": 1284,
									"src": "15462:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15690:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1042,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15706:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1044,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "15720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "15729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "15697:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15697:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "15697:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1040,
												"id": 1049,
												"nodeType": "Return",
												"src": "15743:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15616:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1037,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15666:8:0"
									},
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15624:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15623:33:0"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15684:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15683:6:0"
									},
									"scope": 1284,
									"src": "15607:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "15874:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15890:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1065,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15898:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15898:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1074,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "15950:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15958:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_38e0d8978fd41e2442ba5103603f98f09a924e14179783817fca2bd5fcb14b5d",
																		"typeString": "literal_string \" transfer amount exceeds allowance\""
																	},
																	"value": " transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_38e0d8978fd41e2442ba5103603f98f09a924e14179783817fca2bd5fcb14b5d",
																		"typeString": "literal_string \" transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1067,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "15912:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1069,
																		"indexExpression": {
																			"id": 1068,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "15924:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15912:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1072,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1070,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "15932:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15932:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15912:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 191,
																"src": "15912:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15912:83:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "15881:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15881:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "15881:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1080,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "16013:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "16021:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "16032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "16003:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16003:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "16003:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1062,
												"id": 1086,
												"nodeType": "Return",
												"src": "16052:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15777:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1059,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15850:8:0"
									},
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "15798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "15790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15814:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "15806:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15833:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "15825:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15789:51:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "15868:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15867:6:0"
									},
									"scope": 1284,
									"src": "15768:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "16163:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1098,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16179:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16179:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1100,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "16193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1108,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "16241:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1101,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "16202:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1104,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1102,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "16214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16214:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16202:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1106,
																	"indexExpression": {
																		"id": 1105,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "16228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16202:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 148,
																"src": "16202:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16202:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "16170:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16170:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "16170:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1096,
												"id": 1113,
												"nodeType": "Return",
												"src": "16260:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "16086:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "16104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "16129:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "16121:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16103:37:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "16157:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:6:0"
									},
									"scope": 1284,
									"src": "16077:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "16376:154:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1125,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16392:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16392:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1127,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "16406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1135,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "16454:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16471:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_dfa1312a44b8c2a16b19f0144e018cec04752a56469be03f98b2e990d5545009",
																		"typeString": "literal_string \" decreased allowance below zero\""
																	},
																	"value": " decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_dfa1312a44b8c2a16b19f0144e018cec04752a56469be03f98b2e990d5545009",
																		"typeString": "literal_string \" decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1128,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "16415:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1131,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1129,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "16427:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16427:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16415:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"id": 1132,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "16441:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16415:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 191,
																"src": "16415:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16415:90:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "16383:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16383:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "16383:123:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16520:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1123,
												"id": 1141,
												"nodeType": "Return",
												"src": "16513:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "16294:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "16337:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16329:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16311:42:0"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16369:6:0"
									},
									"scope": 1284,
									"src": "16285:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "16617:352:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1153,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "16632:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16650:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1154,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16642:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16642:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16632:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16654:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
																"typeString": "literal_string \" transfer from the zero address\""
															},
															"value": " transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
																"typeString": "literal_string \" transfer from the zero address\""
															}
														],
														"id": 1152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16624:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "16624:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1163,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "16703:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16724:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16716:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1164,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16716:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16716:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16703:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16728:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
																"typeString": "literal_string \" transfer to the zero address\""
															},
															"value": " transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
																"typeString": "literal_string \" transfer to the zero address\""
															}
														],
														"id": 1162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16695:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "16695:65:0"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1172,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "16769:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1174,
														"indexExpression": {
															"id": 1173,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "16779:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16769:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1179,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "16811:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16819:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b0e913fbe24cc5df5d8954fa1c21fd40510006b55162d8ebc1bce7f85d8d846a",
																	"typeString": "literal_string \" transfer amount exceeds balance\""
																},
																"value": " transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_b0e913fbe24cc5df5d8954fa1c21fd40510006b55162d8ebc1bce7f85d8d846a",
																	"typeString": "literal_string \" transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1175,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "16789:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1177,
																"indexExpression": {
																	"id": 1176,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "16799:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16789:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "16789:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16789:65:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16769:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "16769:85:0"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1184,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "16861:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1186,
														"indexExpression": {
															"id": 1185,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "16871:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16861:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "16909:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1187,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "16884:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1189,
																"indexExpression": {
																	"id": 1188,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "16894:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16884:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "16884:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16884:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16861:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "16861:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1196,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "16937:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "16945:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "16956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "16928:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16928:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "EmitStatement",
												"src": "16923:40:0"
											}
										]
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "16565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "16557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16581:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "16573:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16600:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "16592:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16556:51:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:0"
									},
									"scope": 1284,
									"src": "16538:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "17056:283:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1212,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "17071:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17088:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17080:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1213,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17080:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17080:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17071:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3a20617070726f76652066726f6d6d20746865207a65726f2061646472657373",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17092:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a2a45f7a0ae5e3c927b935ec9594898e983dccfc1b9ff5eee4a4adedc2b84dc",
																"typeString": "literal_string \": approve fromm the zero address\""
															},
															"value": ": approve fromm the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a2a45f7a0ae5e3c927b935ec9594898e983dccfc1b9ff5eee4a4adedc2b84dc",
																"typeString": "literal_string \": approve fromm the zero address\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17063:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "17063:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "17142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17161:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17153:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17153:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17153:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17142:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3a20617070726f76656520746f20746865207a65726f2061646472657373",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17165:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52708ef92082fc49488f0286eda9ffe97f75ec978193ee8cf8f2d6f9d7246abc",
																"typeString": "literal_string \": approvee to the zero address\""
															},
															"value": ": approvee to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52708ef92082fc49488f0286eda9ffe97f75ec978193ee8cf8f2d6f9d7246abc",
																"typeString": "literal_string \": approvee to the zero address\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17134:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "17134:64:0"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1231,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "17253:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1234,
															"indexExpression": {
																"id": 1232,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "17265:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17253:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1233,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "17272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17253:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "17283:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17253:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "17253:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "17310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "17317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "17326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "17301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17301:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "17296:37:0"
											}
										]
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16990:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17007:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "16999:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17022:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "17014:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17039:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "17031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16998:48:0"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17056:0:0"
									},
									"scope": 1284,
									"src": "16981:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "17404:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1252,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17419:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17419:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1254,
																"name": "Contractowner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "17431:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17419:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420746865206f776e6572",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17445:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															},
															"value": "you are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17411:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "17411:58:0"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "Contractowner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "17480:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "17494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17480:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "17480:23:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "17355:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "17381:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "17373:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17372:19:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17404:0:0"
									},
									"scope": 1284,
									"src": "17346:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "17552:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1268,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17567:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17567:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1270,
																"name": "Contractowner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "17579:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17567:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420746865206f776e6572",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17593:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															},
															"value": "you are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17559:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "17559:58:0"
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1275,
														"name": "Contractowner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "17624:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17648:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1276,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17640:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17640:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17624:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "17624:26:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceOwnership",
									"nameLocation": "17524:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17541:2:0"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17552:0:0"
									},
									"scope": 1284,
									"src": "17515:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1285,
							"src": "12169:5494:0",
							"usedErrors": []
						}
					],
					"src": "37:17626:0"
				},
				"id": 0
			}
		}
	}
}